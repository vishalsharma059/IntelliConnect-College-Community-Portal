{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\components\\\\feed\\\\Feed.jsx\",\n  _s = $RefreshSig$();\nimport \"./feed.css\";\nimport Post from \"../post/Post\";\nimport Share from \"../share/Share\";\n// import { Posts } from \"../../dummyData\";\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed({\n  username\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // Function to refresh posts\n  const refreshProfile = async () => {\n    try {\n      const res = username ? await axios.get(\"http://localhost:8800/api/posts/profile/\" + username) : await axios.get(\"http://localhost:8800/api/posts/timeline/\" + user._id);\n      setPosts(res.data.sort((p1, p2) => new Date(p2.createdAt) - new Date(p1.createdAt)));\n    } catch (err) {\n      console.error(\"Error refreshing posts:\", err);\n    }\n  };\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = username ? await axios.get(\"http://localhost:8800/api/posts/profile/\" + username) : await axios.get(\"http://localhost:8800/api/posts/timeline/\" + user._id);\n      setPosts(res.data.sort((p1, p2) => {\n        return new Date(p2.createdAt) - new Date(p1.createdAt);\n      }));\n    };\n    fetchPosts();\n  }, [username, user._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedWrapper\",\n      children: [(!username || username === user.username) && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 63\n      }, this), posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n        post: p,\n        refreshProfile: refreshProfile\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Feed, \"omHF6PJyNAaQxhbtLbXyaS78q/s=\");\n_c = Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["Post","Share","axios","useContext","useEffect","useState","AuthContext","jsxDEV","_jsxDEV","Feed","username","_s","posts","setPosts","user","refreshProfile","res","get","_id","data","sort","p1","p2","Date","createdAt","err","console","error","fetchPosts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","post","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/components/feed/Feed.jsx"],"sourcesContent":["import \"./feed.css\";\r\nimport Post from \"../post/Post\";\r\nimport Share from \"../share/Share\";\r\n// import { Posts } from \"../../dummyData\";\r\nimport axios from \"axios\"\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Feed({username}) {\r\n    const [posts, setPosts] = useState([]);\r\n    const { user } = useContext(AuthContext);\r\n\r\n      // Function to refresh posts\r\n  const refreshProfile = async () => {\r\n    try {\r\n      const res = username\r\n        ? await axios.get(\"http://localhost:8800/api/posts/profile/\" + username)\r\n        : await axios.get(\"http://localhost:8800/api/posts/timeline/\" + user._id);\r\n      setPosts(res.data.sort((p1, p2) => new Date(p2.createdAt) - new Date(p1.createdAt)));\r\n    } catch (err) {\r\n      console.error(\"Error refreshing posts:\", err);\r\n    }\r\n  };\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n                const res = username ?  await axios.get(\"http://localhost:8800/api/posts/profile/\" + username):\r\n                await axios.get(\"http://localhost:8800/api/posts/timeline/\" + user._id);\r\n            setPosts(res.data.sort((p1, p2) => {\r\n                return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n                }));\r\n        };\r\n        fetchPosts();\r\n        \r\n    }, [username,user._id]);\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feedWrapper\">\r\n                {(!username || username === user.username) && <Share />}\r\n                {posts.map((p) => (\r\n                    <Post key={p._id} post={p} refreshProfile={refreshProfile } />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,gBAAgB;AAClC;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,IAAIA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAES;EAAK,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;;EAEtC;EACJ,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,GAAG,GAAGN,QAAQ,GAChB,MAAMR,KAAK,CAACe,GAAG,CAAC,0CAA0C,GAAGP,QAAQ,CAAC,GACtE,MAAMR,KAAK,CAACe,GAAG,CAAC,2CAA2C,GAAGH,IAAI,CAACI,GAAG,CAAC;MAC3EL,QAAQ,CAACG,GAAG,CAACG,IAAI,CAACC,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK,IAAIC,IAAI,CAACD,EAAE,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,EAAE,CAACG,SAAS,CAAC,CAAC,CAAC;IACtF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAECrB,SAAS,CAAC,MAAM;IACZ,MAAMwB,UAAU,GAAG,MAAAA,CAAA,KAAY;MACvB,MAAMZ,GAAG,GAAGN,QAAQ,GAAI,MAAMR,KAAK,CAACe,GAAG,CAAC,0CAA0C,GAAGP,QAAQ,CAAC,GAC9F,MAAMR,KAAK,CAACe,GAAG,CAAC,2CAA2C,GAAGH,IAAI,CAACI,GAAG,CAAC;MAC3EL,QAAQ,CAACG,GAAG,CAACG,IAAI,CAACC,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK;QAC/B,OAAO,IAAIC,IAAI,CAACD,EAAE,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,EAAE,CAACG,SAAS,CAAC;MACtD,CAAC,CAAC,CAAC;IACX,CAAC;IACDI,UAAU,CAAC,CAAC;EAEhB,CAAC,EAAE,CAAClB,QAAQ,EAACI,IAAI,CAACI,GAAG,CAAC,CAAC;EACvB,oBACIV,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBtB,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAC,QAAA,GACvB,CAAC,CAACpB,QAAQ,IAAIA,QAAQ,KAAKI,IAAI,CAACJ,QAAQ,kBAAKF,OAAA,CAACP,KAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtDtB,KAAK,CAACuB,GAAG,CAAEC,CAAC,iBACT5B,OAAA,CAACR,IAAI;QAAaqC,IAAI,EAAED,CAAE;QAACrB,cAAc,EAAEA;MAAgB,GAAhDqB,CAAC,CAAClB,GAAG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CArCuBF,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}