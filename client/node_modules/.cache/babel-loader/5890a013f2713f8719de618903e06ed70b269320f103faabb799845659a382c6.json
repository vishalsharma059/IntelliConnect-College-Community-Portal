{"ast":null,"code":"// import \"./editProfile.css\";\n// import Topbar from \"../../components/topbar/Topbar\";\n// import Sidebar from \"../../components/sidebar/Sidebar\";\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n\n// export default function EditProfile() {\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n//   const username = useParams().username;\n//   const navigate = useNavigate();\n\n//   const [user, setUser] = useState({});\n//   const [formData, setFormData] = useState({\n//     profilePicture: \"\",\n//     coverPicture: \"\",\n//     desc: \"\",\n//     college: \"\",\n//     role: \"\",\n//     course: \"\",\n//   });\n\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const res = await axios.get(\n//           `http://localhost:8800/api/users?username=${username}`\n//         );\n//         setUser(res.data);\n//         setFormData({\n//           profilePicture: res.data.profilePicture || \"\",\n//           coverPicture: res.data.coverPicture || \"\",\n//           desc: res.data.desc || \"\",\n//           college: res.data.college || \"\",\n//           role: res.data.role || \"\",\n//           course: res.data.course || \"\",\n//         });\n//       } catch (error) {\n//         console.error(\"Error fetching user:\", error);\n//       }\n//     };\n//     fetchUser();\n//   }, [username]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleFileChange = (e) => {\n//       const { name, files } = e.target;\n//       if (files[0]) {\n//           setFormData((prev) => ({ ...prev, [name]: files[0] }));  \n//       }\n//   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     const updatedData = new FormData();\n// //     updatedData.append(\"userId\", user._id); // Include userId for authorization\n\n// //     updatedData.append(\"profilePicture\", formData.profilePicture);\n// //     updatedData.append(\"coverPicture\", formData.coverPicture);\n// //     updatedData.append(\"desc\", formData.desc);\n// //     updatedData.append(\"college\", formData.college);\n// //     updatedData.append(\"role\", formData.role);\n// //     updatedData.append(\"course\", formData.course);\n\n// //     try {\n// //       await axios.put(`http://localhost:8800/api/users/${user._id}`, updatedData, {\n// //         headers: {\n// //           \"Content-Type\": \"multipart/form-data\",\n// //         },\n// //       });\n// //       alert(\"Profile updated successfully!\");\n// //       navigate(`/profile/${username}`);\n// //     } catch (error) {\n// //       console.error(\"Error updating profile:\", error);\n// //       alert(\"Failed to update profile.\");\n// //     }\n//     //   };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         const updatedData = {\n//           userId: user._id,  // Pass the userId directly in the JSON body\n//           desc: formData.desc,\n//           college: formData.college,\n//           role: formData.role,\n//           course: formData.course,\n//         };\n\n//         try {\n//           const res = await axios.put(\n//             `http://localhost:8800/api/users/${user._id}`,\n//             updatedData,  // Send data as JSON instead of FormData\n//             {\n//               headers: {\n//                 \"Content-Type\": \"application/json\",  // Specify JSON content type\n//               },\n//             }\n//           );\n//           alert(\"Profile updated successfully!\");\n//           navigate(`/profile/${username}`);\n//         } catch (error) {\n//           console.error(\"Error updating profile:\", error);\n//           alert(\"Failed to update profile.\");\n//         }\n//     };\n\n//     // Handle Profile Picture Update\n//   const handleProfilePictureSubmit = async (e) => {\n//     e.preventDefault();\n//     const formDataProfile = new FormData();\n//     formDataProfile.append(\"userId\", user._id);\n//     formDataProfile.append(\"file\", formData.profilePicture);\n\n//     try {\n//       await axios.post(\n//         `http://localhost:8800/api/users/profilePicture`,  // Separate route for profile picture\n//         formDataProfile,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",  // Specify multipart form data\n//           },\n//         }\n//       );\n//       alert(\"Profile picture updated successfully!\");\n//       navigate(`/profile/${username}`);\n//     } catch (error) {\n//       console.error(\"Error updating profile picture:\", error);\n//       alert(\"Failed to update profile picture.\");\n//     }\n//   };\n\n//   // Handle Cover Picture Update\n//   const handleCoverPictureSubmit = async (e) => {\n//     e.preventDefault();\n//     const formDataCover = new FormData();\n//     formDataCover.append(\"userId\", user._id);\n//     formDataCover.append(\"file\", formData.coverPicture);\n\n//     try {\n//       await axios.post(\n//         `http://localhost:8800/api/users/coverPicture`,  // Separate route for cover picture\n//         formDataCover,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",  // Specify multipart form data\n//           },\n//         }\n//       );\n//       alert(\"Cover picture updated successfully!\");\n//       navigate(`/profile/${username}`);\n//     } catch (error) {\n//       console.error(\"Error updating cover picture:\", error);\n//       alert(\"Failed to update cover picture.\");\n//     }\n//   };\n\n//   return (\n//     // <>\n//     //   <Topbar />\n//     //   <div className=\"editProfile\">\n//     //     <Sidebar />\n//     //     <div className=\"editProfileWrapper\">\n//     //       <h2>Edit Profile</h2>\n//     //       <form className=\"editProfileForm\" onSubmit={handleSubmit}>\n//     //         <label>Profile Picture</label>\n//     //         <input type=\"file\" name=\"profilePicture\" onChange={handleFileChange} />\n\n//     //         <label>Cover Picture</label>\n//     //         <input type=\"file\" name=\"coverPicture\" onChange={handleFileChange} />\n\n//     //         <label>Description</label>\n//     //         <textarea\n//     //           name=\"desc\"\n//     //           value={formData.desc}\n//     //           onChange={handleInputChange}\n//     //           placeholder=\"Write about yourself...\"\n//     //         />\n\n//     //         <label>College</label>\n//     //         <input\n//     //           type=\"text\"\n//     //           name=\"college\"\n//     //           value={formData.college}\n//     //           onChange={handleInputChange}\n//     //           placeholder=\"Enter your college\"\n//     //         />\n\n//     //         <label>Role</label>\n//     //         <input\n//     //           type=\"text\"\n//     //           name=\"role\"\n//     //           value={formData.role}\n//     //           onChange={handleInputChange}\n//     //           placeholder=\"Enter your role\"\n//     //         />\n\n//     //         <label>Course</label>\n//     //         <input\n//     //           type=\"text\"\n//     //           name=\"course\"\n//     //           value={formData.course}\n//     //           onChange={handleInputChange}\n//     //           placeholder=\"Enter your course\"\n//     //         />\n\n//     //         <button type=\"submit\">Save Changes</button>\n//     //       </form>\n//     //     </div>\n//     //   </div>\n//       // </>\n//       <>\n//       <Topbar />\n//       <div className=\"editProfile\">\n//         <Sidebar />\n//         <div className=\"editProfileWrapper\">\n//           <h2>Edit Profile</h2>\n//           <form className=\"editProfileForm\" onSubmit={handleSubmit}>\n//             <label>Profile Picture</label>\n//             <input type=\"file\" name=\"profilePicture\" onChange={handleFileChange} />\n//             <button type=\"button\" onClick={handleProfilePictureSubmit}>\n//               Upload Profile Picture\n//             </button>\n\n//             <label>Cover Picture</label>\n//             <input type=\"file\" name=\"coverPicture\" onChange={handleFileChange} />\n//             <button type=\"button\" onClick={handleCoverPictureSubmit}>\n//               Upload Cover Picture\n//             </button>\n\n//             <label>Description</label>\n//             <textarea\n//               name=\"desc\"\n//               value={formData.desc}\n//               onChange={handleInputChange}\n//               placeholder=\"Write about yourself...\"\n//             />\n\n//             <label>College</label>\n//             <input\n//               type=\"text\"\n//               name=\"college\"\n//               value={formData.college}\n//               onChange={handleInputChange}\n//               placeholder=\"Enter your college\"\n//             />\n\n//             <label>Role</label>\n//             <input\n//               type=\"text\"\n//               name=\"role\"\n//               value={formData.role}\n//               onChange={handleInputChange}\n//               placeholder=\"Enter your role\"\n//             />\n\n//             <label>Course</label>\n//             <input\n//               type=\"text\"\n//               name=\"course\"\n//               value={formData.course}\n//               onChange={handleInputChange}\n//               placeholder=\"Enter your course\"\n//             />\n\n//             <button type=\"submit\">Save Changes</button>\n//           </form>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/IntelliConnect/client/src/pages/editProfile/EditProfile.jsx"],"sourcesContent":["// import \"./editProfile.css\";\r\n// import Topbar from \"../../components/topbar/Topbar\";\r\n// import Sidebar from \"../../components/sidebar/Sidebar\";\r\n// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n// export default function EditProfile() {\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n//   const username = useParams().username;\r\n//   const navigate = useNavigate();\r\n\r\n//   const [user, setUser] = useState({});\r\n//   const [formData, setFormData] = useState({\r\n//     profilePicture: \"\",\r\n//     coverPicture: \"\",\r\n//     desc: \"\",\r\n//     college: \"\",\r\n//     role: \"\",\r\n//     course: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const res = await axios.get(\r\n//           `http://localhost:8800/api/users?username=${username}`\r\n//         );\r\n//         setUser(res.data);\r\n//         setFormData({\r\n//           profilePicture: res.data.profilePicture || \"\",\r\n//           coverPicture: res.data.coverPicture || \"\",\r\n//           desc: res.data.desc || \"\",\r\n//           college: res.data.college || \"\",\r\n//           role: res.data.role || \"\",\r\n//           course: res.data.course || \"\",\r\n//         });\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user:\", error);\r\n//       }\r\n//     };\r\n//     fetchUser();\r\n//   }, [username]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//       const { name, files } = e.target;\r\n//       if (files[0]) {\r\n//           setFormData((prev) => ({ ...prev, [name]: files[0] }));  \r\n//       }\r\n//   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     const updatedData = new FormData();\r\n// //     updatedData.append(\"userId\", user._id); // Include userId for authorization\r\n    \r\n// //     updatedData.append(\"profilePicture\", formData.profilePicture);\r\n// //     updatedData.append(\"coverPicture\", formData.coverPicture);\r\n// //     updatedData.append(\"desc\", formData.desc);\r\n// //     updatedData.append(\"college\", formData.college);\r\n// //     updatedData.append(\"role\", formData.role);\r\n// //     updatedData.append(\"course\", formData.course);\r\n\r\n// //     try {\r\n// //       await axios.put(`http://localhost:8800/api/users/${user._id}`, updatedData, {\r\n// //         headers: {\r\n// //           \"Content-Type\": \"multipart/form-data\",\r\n// //         },\r\n// //       });\r\n// //       alert(\"Profile updated successfully!\");\r\n// //       navigate(`/profile/${username}`);\r\n// //     } catch (error) {\r\n// //       console.error(\"Error updating profile:\", error);\r\n// //       alert(\"Failed to update profile.\");\r\n// //     }\r\n//     //   };\r\n    \r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n      \r\n//         const updatedData = {\r\n//           userId: user._id,  // Pass the userId directly in the JSON body\r\n//           desc: formData.desc,\r\n//           college: formData.college,\r\n//           role: formData.role,\r\n//           course: formData.course,\r\n//         };\r\n      \r\n//         try {\r\n//           const res = await axios.put(\r\n//             `http://localhost:8800/api/users/${user._id}`,\r\n//             updatedData,  // Send data as JSON instead of FormData\r\n//             {\r\n//               headers: {\r\n//                 \"Content-Type\": \"application/json\",  // Specify JSON content type\r\n//               },\r\n//             }\r\n//           );\r\n//           alert(\"Profile updated successfully!\");\r\n//           navigate(`/profile/${username}`);\r\n//         } catch (error) {\r\n//           console.error(\"Error updating profile:\", error);\r\n//           alert(\"Failed to update profile.\");\r\n//         }\r\n//     };\r\n    \r\n//     // Handle Profile Picture Update\r\n//   const handleProfilePictureSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const formDataProfile = new FormData();\r\n//     formDataProfile.append(\"userId\", user._id);\r\n//     formDataProfile.append(\"file\", formData.profilePicture);\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         `http://localhost:8800/api/users/profilePicture`,  // Separate route for profile picture\r\n//         formDataProfile,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",  // Specify multipart form data\r\n//           },\r\n//         }\r\n//       );\r\n//       alert(\"Profile picture updated successfully!\");\r\n//       navigate(`/profile/${username}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error updating profile picture:\", error);\r\n//       alert(\"Failed to update profile picture.\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle Cover Picture Update\r\n//   const handleCoverPictureSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const formDataCover = new FormData();\r\n//     formDataCover.append(\"userId\", user._id);\r\n//     formDataCover.append(\"file\", formData.coverPicture);\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         `http://localhost:8800/api/users/coverPicture`,  // Separate route for cover picture\r\n//         formDataCover,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",  // Specify multipart form data\r\n//           },\r\n//         }\r\n//       );\r\n//       alert(\"Cover picture updated successfully!\");\r\n//       navigate(`/profile/${username}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error updating cover picture:\", error);\r\n//       alert(\"Failed to update cover picture.\");\r\n//     }\r\n//   };\r\n\r\n      \r\n//   return (\r\n//     // <>\r\n//     //   <Topbar />\r\n//     //   <div className=\"editProfile\">\r\n//     //     <Sidebar />\r\n//     //     <div className=\"editProfileWrapper\">\r\n//     //       <h2>Edit Profile</h2>\r\n//     //       <form className=\"editProfileForm\" onSubmit={handleSubmit}>\r\n//     //         <label>Profile Picture</label>\r\n//     //         <input type=\"file\" name=\"profilePicture\" onChange={handleFileChange} />\r\n\r\n//     //         <label>Cover Picture</label>\r\n//     //         <input type=\"file\" name=\"coverPicture\" onChange={handleFileChange} />\r\n\r\n//     //         <label>Description</label>\r\n//     //         <textarea\r\n//     //           name=\"desc\"\r\n//     //           value={formData.desc}\r\n//     //           onChange={handleInputChange}\r\n//     //           placeholder=\"Write about yourself...\"\r\n//     //         />\r\n\r\n//     //         <label>College</label>\r\n//     //         <input\r\n//     //           type=\"text\"\r\n//     //           name=\"college\"\r\n//     //           value={formData.college}\r\n//     //           onChange={handleInputChange}\r\n//     //           placeholder=\"Enter your college\"\r\n//     //         />\r\n\r\n//     //         <label>Role</label>\r\n//     //         <input\r\n//     //           type=\"text\"\r\n//     //           name=\"role\"\r\n//     //           value={formData.role}\r\n//     //           onChange={handleInputChange}\r\n//     //           placeholder=\"Enter your role\"\r\n//     //         />\r\n\r\n//     //         <label>Course</label>\r\n//     //         <input\r\n//     //           type=\"text\"\r\n//     //           name=\"course\"\r\n//     //           value={formData.course}\r\n//     //           onChange={handleInputChange}\r\n//     //           placeholder=\"Enter your course\"\r\n//     //         />\r\n\r\n//     //         <button type=\"submit\">Save Changes</button>\r\n//     //       </form>\r\n//     //     </div>\r\n//     //   </div>\r\n//       // </>\r\n//       <>\r\n//       <Topbar />\r\n//       <div className=\"editProfile\">\r\n//         <Sidebar />\r\n//         <div className=\"editProfileWrapper\">\r\n//           <h2>Edit Profile</h2>\r\n//           <form className=\"editProfileForm\" onSubmit={handleSubmit}>\r\n//             <label>Profile Picture</label>\r\n//             <input type=\"file\" name=\"profilePicture\" onChange={handleFileChange} />\r\n//             <button type=\"button\" onClick={handleProfilePictureSubmit}>\r\n//               Upload Profile Picture\r\n//             </button>\r\n\r\n//             <label>Cover Picture</label>\r\n//             <input type=\"file\" name=\"coverPicture\" onChange={handleFileChange} />\r\n//             <button type=\"button\" onClick={handleCoverPictureSubmit}>\r\n//               Upload Cover Picture\r\n//             </button>\r\n\r\n//             <label>Description</label>\r\n//             <textarea\r\n//               name=\"desc\"\r\n//               value={formData.desc}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"Write about yourself...\"\r\n//             />\r\n\r\n//             <label>College</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"college\"\r\n//               value={formData.college}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"Enter your college\"\r\n//             />\r\n\r\n//             <label>Role</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"role\"\r\n//               value={formData.role}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"Enter your role\"\r\n//             />\r\n\r\n//             <label>Course</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"course\"\r\n//               value={formData.course}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"Enter your course\"\r\n//             />\r\n\r\n//             <button type=\"submit\">Save Changes</button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}