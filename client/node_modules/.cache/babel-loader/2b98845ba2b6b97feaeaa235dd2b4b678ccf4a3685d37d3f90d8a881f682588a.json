{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import \"./chatOnline.css\";\n// import axios from \"axios\";\n\n// export default function ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\n\n//   const [friends, setFriends] = useState([]);\n//   const [onlinefriends, setOnlineFriends] = useState([]);\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n//   useEffect(() => {\n//     if (!currentId) {\n//         console.error(\"currentId is undefined or null\");\n//         return;\n//     }\n\n//     const getFriends = async () => {\n//         try {\n//             const res = await axios.get(\"/users/friends/\" + currentId);\n//             setFriends(res.data);\n//         } catch (err) {\n//             console.error(\"Error fetching friends:\", err.message);\n//         }\n//     };\n\n//     getFriends();\n// }, [currentId]);\n\n//   useEffect(() => {\n//     setOnlineFriends(friends.filter((f) => onlineUsers.includes(f._id)));\n//   }, [friends, onlineUsers]);\n\n//   const handleClick = async (user) => {\n//     try {\n//       const res = await axios.get(`/conversations/find/${currentId}/${user._id}`);\n//       setCurrentChat(res.data);\n//     } catch (err) {\n//       console.log(err);\n\n//     }\n//   }\n\n//   return (\n//     <div className=\"chatOnline\">\n//       {onlinefriends.map((o) => (\n\n//         <div className=\"chatOnlineFriend\" onClick={()=> handleClick(o)}>\n//         <div className=\"chatOnlineImageContainer\">\n//             <img className=\"chatOnlineImage\" src={o?.profilePicture\n//               ? PF + o?.profilePicture\n//               : PF + \"person/noAvatar.png\"\n//             } alt=\"\" />\n//           <div className=\"chatOnlineBadge\"></div>\n//         </div>\n//           <span className=\"chatOnlineName\">{o.username }</span>\n//       </div>\n//       ))}\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/IntelliConnect/client/src/components/chatOnline/ChatOnline.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import \"./chatOnline.css\";\r\n// import axios from \"axios\";\r\n\r\n// export default function ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\r\n\r\n//   const [friends, setFriends] = useState([]);\r\n//   const [onlinefriends, setOnlineFriends] = useState([]);\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n//   useEffect(() => {\r\n//     if (!currentId) {\r\n//         console.error(\"currentId is undefined or null\");\r\n//         return;\r\n//     }\r\n\r\n//     const getFriends = async () => {\r\n//         try {\r\n//             const res = await axios.get(\"/users/friends/\" + currentId);\r\n//             setFriends(res.data);\r\n//         } catch (err) {\r\n//             console.error(\"Error fetching friends:\", err.message);\r\n//         }\r\n//     };\r\n\r\n//     getFriends();\r\n// }, [currentId]);\r\n\r\n//   useEffect(() => {\r\n//     setOnlineFriends(friends.filter((f) => onlineUsers.includes(f._id)));\r\n//   }, [friends, onlineUsers]);\r\n  \r\n//   const handleClick = async (user) => {\r\n//     try {\r\n//       const res = await axios.get(`/conversations/find/${currentId}/${user._id}`);\r\n//       setCurrentChat(res.data);\r\n//     } catch (err) {\r\n//       console.log(err);\r\n      \r\n//     }\r\n//   }\r\n  \r\n\r\n//   return (\r\n//     <div className=\"chatOnline\">\r\n//       {onlinefriends.map((o) => (\r\n        \r\n//         <div className=\"chatOnlineFriend\" onClick={()=> handleClick(o)}>\r\n//         <div className=\"chatOnlineImageContainer\">\r\n//             <img className=\"chatOnlineImage\" src={o?.profilePicture\r\n//               ? PF + o?.profilePicture\r\n//               : PF + \"person/noAvatar.png\"\r\n//             } alt=\"\" />\r\n//           <div className=\"chatOnlineBadge\"></div>\r\n//         </div>\r\n//           <span className=\"chatOnlineName\">{o.username }</span>\r\n//       </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}