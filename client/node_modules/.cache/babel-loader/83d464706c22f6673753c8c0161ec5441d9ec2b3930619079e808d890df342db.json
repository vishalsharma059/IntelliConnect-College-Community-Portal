{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n  _s = $RefreshSig$();\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversation/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const socket = useRef();\n  const scrollRef = useRef(null);\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // Establish the socket connection\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n\n    // \n\n    // Disconnect socket on component unmount\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (arrivalMessage && currentChat !== null && currentChat !== void 0 && currentChat.members.includes(arrivalMessage.sender)) {\n      setMessages(prev => [...prev, arrivalMessage]);\n    }\n  }, [arrivalMessage, currentChat]);\n\n  // Handle socket events for online users\n  useEffect(() => {\n    const handleGetUsers = users => {\n      setOnlineUsers(user.following.filter(f => users.some(u => u.userId === f)));\n    };\n    if (user !== null && user !== void 0 && user._id) {\n      socket.current.emit(\"addUser\", user._id);\n      socket.current.on(\"getUsers\", handleGetUsers);\n    }\n\n    // Cleanup to avoid duplicate event listeners\n    return () => {\n      socket.current.off(\"getUsers\", handleGetUsers);\n    };\n  }, [user]);\n\n  // Fetch conversations\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.error(\"Error fetching conversations:\", err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  // Fetch messages\n  useEffect(() => {\n    const getMessage = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.error(\"Error fetching messages:\", err);\n      }\n    };\n    if (currentChat) getMessage();\n  }, [currentChat]);\n\n  // Handle message submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return; // Prevent empty submissions\n\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    setIsLoading(true); // Start loading\n\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages(prev => [...prev, res.data]);\n      setNewMessage(\"\"); // Clear textarea\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n      alert(\"Failed to send message. Please try again.\");\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n\n  // Scroll to the bottom when a new message is added\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    if (arrivalMessage && (!currentChat || !currentChat.members.includes(arrivalMessage.sender))) {\n      toast.info(\"ðŸ“© New message received!\", {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true\n      });\n    }\n  }, [arrivalMessage, currentChat]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), conversations && conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)\n          }, c._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map((m, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage,\n                disabled: isLoading // Disable while loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                disabled: isLoading // Disable while loading\n                ,\n                children: isLoading ? \"Sending...\" : \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineUsers: onlineUsers,\n            currentId: user._id,\n            setCurrentChat: setCurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Messenger, \"1NsZzMQ+Zgull5TDPzJtD3Y0VO0=\");\n_c = Messenger;\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["Topbar","Conversation","Message","ChatOnline","useContext","useEffect","useRef","useState","AuthContext","axios","io","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Messenger","_s","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","isLoading","setIsLoading","socket","scrollRef","user","current","disconnect","members","includes","sender","prev","handleGetUsers","users","following","filter","f","some","u","userId","_id","emit","on","off","getConversations","res","get","data","err","console","error","getMessage","handleSubmit","e","preventDefault","trim","message","text","conversationId","receiverId","find","member","senderId","post","alert","_scrollRef$current","scrollIntoView","behavior","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","map","c","onClick","conversation","currentUser","m","index","ref","own","onChange","target","value","disabled","currentId","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/pages/messenger/Messenger.jsx"],"sourcesContent":["import \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Messenger() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const socket = useRef();\r\n  const scrollRef = useRef(null);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  // Establish the socket connection\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8900\");\r\n\r\n    // \r\n    \r\n\r\n    // Disconnect socket on component unmount\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (arrivalMessage && currentChat?.members.includes(arrivalMessage.sender)) {\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n    }\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  // Handle socket events for online users\r\n  useEffect(() => {\r\n    const handleGetUsers = (users) => {\r\n      setOnlineUsers(user.following.filter((f) => users.some((u) => u.userId === f)));\r\n    };\r\n\r\n    if (user?._id) {\r\n      socket.current.emit(\"addUser\", user._id);\r\n      socket.current.on(\"getUsers\", handleGetUsers);\r\n    }\r\n\r\n    // Cleanup to avoid duplicate event listeners\r\n    return () => {\r\n      socket.current.off(\"getUsers\", handleGetUsers);\r\n    };\r\n  }, [user]);\r\n\r\n  // Fetch conversations\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get(\"/conversations/\" + user._id);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching conversations:\", err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user._id]);\r\n\r\n  // Fetch messages\r\n  useEffect(() => {\r\n    const getMessage = async () => {\r\n      try {\r\n        const res = await axios.get(\"/messages/\" + currentChat?._id);\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching messages:\", err);\r\n      }\r\n    };\r\n    if (currentChat) getMessage();\r\n  }, [currentChat]);\r\n\r\n  // Handle message submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return; // Prevent empty submissions\r\n\r\n    const message = {\r\n      sender: user._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n\r\n    setIsLoading(true); // Start loading\r\n\r\n    const receiverId = currentChat.members.find((member) => member !== user._id);\r\n\r\n    socket.current.emit(\"sendMessage\", {\r\n      senderId: user._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\"/messages\", message);\r\n      setMessages((prev) => [...prev, res.data]);\r\n      setNewMessage(\"\"); // Clear textarea\r\n    } catch (err) {\r\n      console.error(\"Error sending message:\", err);\r\n      alert(\"Failed to send message. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  // Scroll to the bottom when a new message is added\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      arrivalMessage &&\r\n      (!currentChat || !currentChat.members.includes(arrivalMessage.sender))\r\n    ) {\r\n      toast.info(\"ðŸ“© New message received!\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n      });\r\n    }\r\n  }, [arrivalMessage, currentChat]);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\r\n            {conversations &&\r\n              conversations.map((c) => (\r\n                <div onClick={() => setCurrentChat(c)} key={c._id}>\r\n                  <Conversation conversation={c} currentUser={user} />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m, index) => (\r\n                    <div ref={scrollRef} key={index}>\r\n                      <Message message={m} own={m.sender === user._id} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"write something...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                    disabled={isLoading} // Disable while loading\r\n                  ></textarea>\r\n                  <button\r\n                    className=\"chatSubmitButton\"\r\n                    onClick={handleSubmit}\r\n                    disabled={isLoading} // Disable while loading\r\n                  >\r\n                    {isLoading ? \"Sending...\" : \"Send\"}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noConversationText\">\r\n                Open a conversation to start a chat.\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chatOnline\">\r\n          <div className=\"chatOnlineWrapper\">\r\n            <ChatOnline onlineUsers={onlineUsers} currentId={user._id} setCurrentChat={setCurrentChat} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer/>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}