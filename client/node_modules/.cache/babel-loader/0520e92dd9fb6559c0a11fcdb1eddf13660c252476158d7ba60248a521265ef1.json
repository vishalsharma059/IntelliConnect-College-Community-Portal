{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\components\\\\post\\\\Post.jsx\",\n  _s = $RefreshSig$();\n// import \"./post.css\";\n// import { MoreVert } from \"@mui/icons-material\";\n// // import { Users } from \"../../dummyData\";\n// import { useState, useEffect, useContext } from \"react\";\n// import axios from \"axios\";\n// import { format } from \"timeago.js\";\n// import { Link } from \"react-router-dom\";\n// import { AuthContext } from \"../../context/AuthContext\";\n\n// export default function Post({ post }) {\n//   const [like, setLike] = useState(post.likes.length);\n//   const [isLiked, setIsLiked] = useState(false);\n//   const [user, setUser] = useState({});\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // For success message\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n//   const { user: currentUser, dispatch } = useContext(AuthContext);\n\n//   useEffect(() => {\n//     setIsLiked(post.likes.includes(currentUser._id));\n//   }, [currentUser._id, post.likes]);\n\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const res = await axios.get(\n//           `http://localhost:8800/api/users?userId=${post.userId}`\n//         );\n//         setUser(res.data);\n//       } catch (error) {\n//         console.error(\"Error fetching user:\", error);\n//       }\n//     };\n//     fetchUser();\n//   }, [post.userId]);\n\n//   const likeHandler = () => {\n//     try {\n//       axios.put(\"http://localhost:8800/api/posts/\" + post._id + \"/like\", {\n//         userId: currentUser._id,\n//       });\n//     } catch (err) {}\n//     setLike(isLiked ? like - 1 : like + 1);\n//     setIsLiked(!isLiked);\n//   };\n\n//   const deleteHandler = async () => {\n//     try {\n//       await axios.delete(`http://localhost:8800/api/posts/${post._id}`, {\n//         data: { userId: currentUser._id },\n//       });\n//       setSuccessMessage(\"Post deleted successfully\");\n//       // Optionally call the refresh function\n//       refreshProfile();\n//     } catch (err) {\n//       console.error(\"Error deleting post:\", err);\n//       setSuccessMessage(\"Failed to delete post\");\n//     }\n//   };\n\n//   const updateHandler = async () => {\n//     try {\n//       const updatedPost = { ...post, desc: \"Updated description\" }; // Example updated post data\n//       await axios.put(\n//         `http://localhost:8800/api/posts/${post._id}`,\n//         updatedPost,\n//         { data: { userId: currentUser._id } }\n//       );\n//       setSuccessMessage(\"Post updated successfully\");\n//       refreshProfile(); // Refresh profile after update\n//     } catch (err) {\n//       console.error(\"Error updating post:\", err);\n//       setSuccessMessage(\"Failed to update post\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"post\">\n//       <div className=\"postWrapper\">\n//         <div className=\"postTop\">\n//           <div className=\"postTopLeft\">\n//             <Link to={`/profile/${user.username}`}>\n//               <img\n//                 className=\"postProfileImage\"\n//                 src={\n//                   user.profilePicture\n//                     ? PF + user.profilePicture\n//                     : PF + \"person/noAvatar.png\"\n//                 }\n//                 alt=\"\"\n//               />\n//             </Link>\n//             <span className=\"postUserName\">{user.username}</span>\n//             <span className=\"postDate\">{format(post.createdAt)}</span>\n//           </div>\n//           <div className=\"postTopRight\">\n//           {post.userId === currentUser._id && (\n//               <div>\n//                 <button className=\"updateButton\" onClick={updateHandler}>Update</button>\n//                 <button className=\"deleteButton\" onClick={deleteHandler}>Delete</button>\n//               </div>\n//             )}\n//             <MoreVert />\n//           </div>\n//         </div>\n//         <div className=\"postCenter\">\n//           <span className=\"postText\">{post?.desc}</span>\n//           <img className=\"postImage\" src={PF + post.img} alt=\"\" />\n//         </div>\n//         <div className=\"postBottom\">\n//           <div className=\"postBottomLeft\">\n//             <img\n//               className=\"likeIcon\"\n//               src={`${PF}like.png`}\n//               onClick={likeHandler}\n//               alt=\"\"\n//             />\n//             <img\n//               className=\"likeIcon\"\n//               src={`${PF}heart.png`}\n//               onClick={likeHandler}\n//               alt=\"\"\n//             />\n//             <span className=\"postLikeCounter\">{like} people like it</span>\n//           </div>\n//           <div className=\"postBottomRight\">\n//             <span className=\"postCommentText\">{post.comment} comments</span>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport \"./post.css\";\nimport { MoreVert } from \"@mui/icons-material\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"timeago.js\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post,\n  refreshProfile\n}) {\n  _s();\n  const [like, setLike] = useState(post.likes.length);\n  const [isLiked, setIsLiked] = useState(false);\n  const [user, setUser] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\"); // For success message\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const {\n    user: currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    setIsLiked(post.likes.includes(currentUser._id));\n  }, [currentUser._id, post.likes]);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8800/api/users?userId=${post.userId}`);\n        setUser(res.data);\n      } catch (error) {\n        console.error(\"Error fetching user:\", error);\n      }\n    };\n    fetchUser();\n  }, [post.userId]);\n  const likeHandler = () => {\n    try {\n      axios.put(\"http://localhost:8800/api/posts/\" + post._id + \"/like\", {\n        userId: currentUser._id\n      });\n    } catch (err) {}\n    setLike(isLiked ? like - 1 : like + 1);\n    setIsLiked(!isLiked);\n  };\n  const deleteHandler = async () => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this post?\");\n    if (confirmDelete) {\n      try {\n        await axios.delete(`http://localhost:8800/api/posts/${post._id}`, {\n          data: {\n            userId: currentUser._id\n          }\n        });\n        setSuccessMessage(\"Post deleted successfully\");\n        refreshProfile(); // Refresh profile after delete\n      } catch (err) {\n        console.error(\"Error deleting post:\", err);\n        setSuccessMessage(\"Failed to delete post\");\n      }\n    }\n  };\n  const updateHandler = async () => {\n    const confirmUpdate = window.confirm(\"Are you sure you want to update this post?\");\n    if (confirmUpdate) {\n      try {\n        const updatedPost = {\n          ...post,\n          desc: \"Updated description\"\n        }; // Example updated post data\n        await axios.put(`http://localhost:8800/api/posts/${post._id}`, updatedPost, {\n          data: {\n            userId: currentUser._id\n          }\n        });\n        setSuccessMessage(\"Post updated successfully\");\n        refreshProfile(); // Refresh profile after update\n      } catch (err) {\n        console.error(\"Error updating post:\", err);\n        setSuccessMessage(\"Failed to update post\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopLeft\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${user.username}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"postProfileImage\",\n              src: user.profilePicture ? PF + user.profilePicture : PF + \"person/noAvatar.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postUserName\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postDate\",\n            children: format(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopRight\",\n          children: [post.userId === currentUser._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"updateButton\",\n              onClick: updateHandler,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteButton\",\n              onClick: deleteHandler,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postText\",\n          children: post === null || post === void 0 ? void 0 : post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"postImage\",\n          src: PF + post.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postBottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"likeIcon\",\n            src: `${PF}like.png`,\n            onClick: likeHandler,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"likeIcon\",\n            src: `${PF}heart.png`,\n            onClick: likeHandler,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postLikeCounter\",\n            children: [like, \" people like it\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomRight\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postCommentText\",\n            children: [post.comment, \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"successMessage\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"Jd3TT+XAL3YflcTKcBRMcePm/vQ=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["MoreVert","useState","useEffect","useContext","axios","format","Link","AuthContext","jsxDEV","_jsxDEV","Post","post","refreshProfile","_s","like","setLike","likes","length","isLiked","setIsLiked","user","setUser","successMessage","setSuccessMessage","PF","process","env","REACT_APP_PUBLIC_FOLDER","currentUser","includes","_id","fetchUser","res","get","userId","data","error","console","likeHandler","put","err","deleteHandler","confirmDelete","window","confirm","delete","updateHandler","confirmUpdate","updatedPost","desc","className","children","to","username","src","profilePicture","alt","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","onClick","img","comment","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/components/post/Post.jsx"],"sourcesContent":["// import \"./post.css\";\r\n// import { MoreVert } from \"@mui/icons-material\";\r\n// // import { Users } from \"../../dummyData\";\r\n// import { useState, useEffect, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import { format } from \"timeago.js\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { AuthContext } from \"../../context/AuthContext\";\r\n\r\n// export default function Post({ post }) {\r\n//   const [like, setLike] = useState(post.likes.length);\r\n//   const [isLiked, setIsLiked] = useState(false);\r\n//   const [user, setUser] = useState({});\r\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // For success message\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n//   const { user: currentUser, dispatch } = useContext(AuthContext);\r\n\r\n//   useEffect(() => {\r\n//     setIsLiked(post.likes.includes(currentUser._id));\r\n//   }, [currentUser._id, post.likes]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const res = await axios.get(\r\n//           `http://localhost:8800/api/users?userId=${post.userId}`\r\n//         );\r\n//         setUser(res.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user:\", error);\r\n//       }\r\n//     };\r\n//     fetchUser();\r\n//   }, [post.userId]);\r\n\r\n//   const likeHandler = () => {\r\n//     try {\r\n//       axios.put(\"http://localhost:8800/api/posts/\" + post._id + \"/like\", {\r\n//         userId: currentUser._id,\r\n//       });\r\n//     } catch (err) {}\r\n//     setLike(isLiked ? like - 1 : like + 1);\r\n//     setIsLiked(!isLiked);\r\n//   };\r\n\r\n//   const deleteHandler = async () => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8800/api/posts/${post._id}`, {\r\n//         data: { userId: currentUser._id },\r\n//       });\r\n//       setSuccessMessage(\"Post deleted successfully\");\r\n//       // Optionally call the refresh function\r\n//       refreshProfile();\r\n//     } catch (err) {\r\n//       console.error(\"Error deleting post:\", err);\r\n//       setSuccessMessage(\"Failed to delete post\");\r\n//     }\r\n//   };\r\n\r\n//   const updateHandler = async () => {\r\n//     try {\r\n//       const updatedPost = { ...post, desc: \"Updated description\" }; // Example updated post data\r\n//       await axios.put(\r\n//         `http://localhost:8800/api/posts/${post._id}`,\r\n//         updatedPost,\r\n//         { data: { userId: currentUser._id } }\r\n//       );\r\n//       setSuccessMessage(\"Post updated successfully\");\r\n//       refreshProfile(); // Refresh profile after update\r\n//     } catch (err) {\r\n//       console.error(\"Error updating post:\", err);\r\n//       setSuccessMessage(\"Failed to update post\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"post\">\r\n//       <div className=\"postWrapper\">\r\n//         <div className=\"postTop\">\r\n//           <div className=\"postTopLeft\">\r\n//             <Link to={`/profile/${user.username}`}>\r\n//               <img\r\n//                 className=\"postProfileImage\"\r\n//                 src={\r\n//                   user.profilePicture\r\n//                     ? PF + user.profilePicture\r\n//                     : PF + \"person/noAvatar.png\"\r\n//                 }\r\n//                 alt=\"\"\r\n//               />\r\n//             </Link>\r\n//             <span className=\"postUserName\">{user.username}</span>\r\n//             <span className=\"postDate\">{format(post.createdAt)}</span>\r\n//           </div>\r\n//           <div className=\"postTopRight\">\r\n//           {post.userId === currentUser._id && (\r\n//               <div>\r\n//                 <button className=\"updateButton\" onClick={updateHandler}>Update</button>\r\n//                 <button className=\"deleteButton\" onClick={deleteHandler}>Delete</button>\r\n//               </div>\r\n//             )}\r\n//             <MoreVert />\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"postCenter\">\r\n//           <span className=\"postText\">{post?.desc}</span>\r\n//           <img className=\"postImage\" src={PF + post.img} alt=\"\" />\r\n//         </div>\r\n//         <div className=\"postBottom\">\r\n//           <div className=\"postBottomLeft\">\r\n//             <img\r\n//               className=\"likeIcon\"\r\n//               src={`${PF}like.png`}\r\n//               onClick={likeHandler}\r\n//               alt=\"\"\r\n//             />\r\n//             <img\r\n//               className=\"likeIcon\"\r\n//               src={`${PF}heart.png`}\r\n//               onClick={likeHandler}\r\n//               alt=\"\"\r\n//             />\r\n//             <span className=\"postLikeCounter\">{like} people like it</span>\r\n//           </div>\r\n//           <div className=\"postBottomRight\">\r\n//             <span className=\"postCommentText\">{post.comment} comments</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport \"./post.css\";\r\nimport { MoreVert } from \"@mui/icons-material\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Post({ post, refreshProfile }) {\r\n  const [like, setLike] = useState(post.likes.length);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // For success message\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user: currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    setIsLiked(post.likes.includes(currentUser._id));\r\n  }, [currentUser._id, post.likes]);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `http://localhost:8800/api/users?userId=${post.userId}`\r\n        );\r\n        setUser(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user:\", error);\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [post.userId]);\r\n\r\n  const likeHandler = () => {\r\n    try {\r\n      axios.put(\"http://localhost:8800/api/posts/\" + post._id + \"/like\", {\r\n        userId: currentUser._id,\r\n      });\r\n    } catch (err) {}\r\n    setLike(isLiked ? like - 1 : like + 1);\r\n    setIsLiked(!isLiked);\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this post?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`http://localhost:8800/api/posts/${post._id}`, {\r\n          data: { userId: currentUser._id },\r\n        });\r\n        setSuccessMessage(\"Post deleted successfully\");\r\n        refreshProfile(); // Refresh profile after delete\r\n      } catch (err) {\r\n        console.error(\"Error deleting post:\", err);\r\n        setSuccessMessage(\"Failed to delete post\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateHandler = async () => {\r\n    const confirmUpdate = window.confirm(\"Are you sure you want to update this post?\");\r\n    if (confirmUpdate) {\r\n      try {\r\n        const updatedPost = { ...post, desc: \"Updated description\" }; // Example updated post data\r\n        await axios.put(\r\n          `http://localhost:8800/api/posts/${post._id}`,\r\n          updatedPost,\r\n          { data: { userId: currentUser._id } }\r\n        );\r\n        setSuccessMessage(\"Post updated successfully\");\r\n        refreshProfile(); // Refresh profile after update\r\n      } catch (err) {\r\n        console.error(\"Error updating post:\", err);\r\n        setSuccessMessage(\"Failed to update post\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"postWrapper\">\r\n        <div className=\"postTop\">\r\n          <div className=\"postTopLeft\">\r\n            <Link to={`/profile/${user.username}`}>\r\n              <img\r\n                className=\"postProfileImage\"\r\n                src={\r\n                  user.profilePicture\r\n                    ? PF + user.profilePicture\r\n                    : PF + \"person/noAvatar.png\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n            <span className=\"postUserName\">{user.username}</span>\r\n            <span className=\"postDate\">{format(post.createdAt)}</span>\r\n          </div>\r\n          <div className=\"postTopRight\">\r\n            {post.userId === currentUser._id && (\r\n              <div>\r\n                <button className=\"updateButton\" onClick={updateHandler}>Update</button>\r\n                <button className=\"deleteButton\" onClick={deleteHandler}>Delete</button>\r\n              </div>\r\n            )}\r\n            <MoreVert />\r\n          </div>\r\n        </div>\r\n        <div className=\"postCenter\">\r\n          <span className=\"postText\">{post?.desc}</span>\r\n          <img className=\"postImage\" src={PF + post.img} alt=\"\" />\r\n        </div>\r\n        <div className=\"postBottom\">\r\n          <div className=\"postBottomLeft\">\r\n            <img\r\n              className=\"likeIcon\"\r\n              src={`${PF}like.png`}\r\n              onClick={likeHandler}\r\n              alt=\"\"\r\n            />\r\n            <img\r\n              className=\"likeIcon\"\r\n              src={`${PF}heart.png`}\r\n              onClick={likeHandler}\r\n              alt=\"\"\r\n            />\r\n            <span className=\"postLikeCounter\">{like} people like it</span>\r\n          </div>\r\n          <div className=\"postBottomRight\">\r\n            <span className=\"postCommentText\">{post.comment} comments</span>\r\n          </div>\r\n        </div>\r\n\r\n                {/* Success Message Display */}\r\n                {successMessage && (\r\n          <div className=\"successMessage\">\r\n            {successMessage}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}