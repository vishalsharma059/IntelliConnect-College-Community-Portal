{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\components\\\\conversation\\\\Conversation.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\"\n// import \"./conversation.css\"\n// import axios from \"axios\";\n\n// export default function Conversation({ conversation, currentUser }) {\n//   const [user, setUser] = useState(null);\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER\n\n//   useEffect(() => {\n//     if (!conversation || !conversation.members) {\n//       console.error(\"Invalid conversation object:\", conversation);\n//       return;\n//     }\n\n//     const friendId = conversation.members.find((m) => m !== currentUser._id);\n\n//     const getUser = async () => {\n//       try {\n//         const res = await axios.get(\"/users?userId=\" + friendId);\n//         setUser(res.data);\n//       } catch (err) {\n//         console.log(err);\n//       }\n//     }\n//     getUser();\n//   }, [currentUser, conversation]);\n\n//   return (\n//     <div className=\"conversation\">\n//       {!user ? (\n//         <span>Loading...</span>\n//       ) : (\n//         <>\n//             <img\n//     className=\"conversationImage\"\n//     src={\n//       user?.profilePicture\n//         ? PF + user.profilePicture\n//         : PF + \"person/noAvatar.png\"\n//     }\n//     alt=\"Profile\"\n//   />\n//           <span className=\"conversationName\">{user?.username || \"Unknown User\"}</span>\n//         </>\n//       )}\n//     </div>\n//   )\n// }\n\nimport { useEffect, useState } from \"react\";\nimport \"./conversation.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Conversation({\n  conversation,\n  currentUser,\n  highlight\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  useEffect(() => {\n    if (!conversation || !conversation.members) {\n      console.error(\"Invalid conversation object:\", conversation);\n      return;\n    }\n    const friendId = conversation.members.find(m => m !== currentUser._id);\n    const getUser = async () => {\n      try {\n        const res = await axios.get(\"/users?userId=\" + friendId);\n        setUser(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getUser();\n  }, [currentUser, conversation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `conversation ${highlight ? \"highlight\" : \"\"}`,\n    children: !user ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"conversationImage\",\n        src: user !== null && user !== void 0 && user.profilePicture ? PF + user.profilePicture : PF + \"person/noAvatar.png\",\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"conversationName\",\n        children: (user === null || user === void 0 ? void 0 : user.username) || \"Unknown User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Conversation, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Conversation","conversation","currentUser","highlight","_s","user","setUser","PF","process","env","REACT_APP_PUBLIC_FOLDER","members","console","error","friendId","find","m","_id","getUser","res","get","data","err","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","profilePicture","alt","username","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/components/conversation/Conversation.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\"\r\n// import \"./conversation.css\"\r\n// import axios from \"axios\";\r\n\r\n// export default function Conversation({ conversation, currentUser }) {\r\n//   const [user, setUser] = useState(null);\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER\r\n  \r\n//   useEffect(() => {\r\n//     if (!conversation || !conversation.members) {\r\n//       console.error(\"Invalid conversation object:\", conversation);\r\n//       return;\r\n//     }\r\n\r\n//     const friendId = conversation.members.find((m) => m !== currentUser._id);\r\n\r\n//     const getUser = async () => {\r\n//       try {\r\n//         const res = await axios.get(\"/users?userId=\" + friendId);\r\n//         setUser(res.data);\r\n//       } catch (err) {\r\n//         console.log(err);\r\n//       }\r\n//     }\r\n//     getUser();\r\n//   }, [currentUser, conversation]);\r\n\r\n//   return (\r\n//     <div className=\"conversation\">\r\n//       {!user ? (\r\n//         <span>Loading...</span>\r\n//       ) : (\r\n//         <>\r\n//             <img\r\n//     className=\"conversationImage\"\r\n//     src={\r\n//       user?.profilePicture\r\n//         ? PF + user.profilePicture\r\n//         : PF + \"person/noAvatar.png\"\r\n//     }\r\n//     alt=\"Profile\"\r\n//   />\r\n//           <span className=\"conversationName\">{user?.username || \"Unknown User\"}</span>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./conversation.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Conversation({ conversation, currentUser, highlight }) {\r\n  const [user, setUser] = useState(null);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  useEffect(() => {\r\n    if (!conversation || !conversation.members) {\r\n      console.error(\"Invalid conversation object:\", conversation);\r\n      return;\r\n    }\r\n\r\n    const friendId = conversation.members.find((m) => m !== currentUser._id);\r\n\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get(\"/users?userId=\" + friendId);\r\n        setUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [currentUser, conversation]);\r\n\r\n  return (\r\n    <div className={`conversation ${highlight ? \"highlight\" : \"\"}`}>\r\n      {!user ? (\r\n        <span>Loading...</span>\r\n      ) : (\r\n        <>\r\n          <img\r\n            className=\"conversationImage\"\r\n            src={\r\n              user?.profilePicture\r\n                ? PF + user.profilePicture\r\n                : PF + \"person/noAvatar.png\"\r\n            }\r\n            alt=\"Profile\"\r\n          />\r\n          <span className=\"conversationName\">{user?.username || \"Unknown User\"}</span>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,YAAYA,CAAC;EAAEC,YAAY;EAAEC,WAAW;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC7E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMa,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB;EAE9CjB,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,YAAY,IAAI,CAACA,YAAY,CAACU,OAAO,EAAE;MAC1CC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEZ,YAAY,CAAC;MAC3D;IACF;IAEA,MAAMa,QAAQ,GAAGb,YAAY,CAACU,OAAO,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,KAAKd,WAAW,CAACe,GAAG,CAAC;IAExE,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,gBAAgB,GAAGN,QAAQ,CAAC;QACxDR,OAAO,CAACa,GAAG,CAACE,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZV,OAAO,CAACW,GAAG,CAACD,GAAG,CAAC;MAClB;IACF,CAAC;IACDJ,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAAChB,WAAW,EAAED,YAAY,CAAC,CAAC;EAE/B,oBACEJ,OAAA;IAAK2B,SAAS,EAAE,gBAAgBrB,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAsB,QAAA,EAC5D,CAACpB,IAAI,gBACJR,OAAA;MAAA4B,QAAA,EAAM;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEvBhC,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACE5B,OAAA;QACE2B,SAAS,EAAC,mBAAmB;QAC7BM,GAAG,EACDzB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE0B,cAAc,GAChBxB,EAAE,GAAGF,IAAI,CAAC0B,cAAc,GACxBxB,EAAE,GAAG,qBACV;QACDyB,GAAG,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACFhC,OAAA;QAAM2B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAE,CAAApB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4B,QAAQ,KAAI;MAAc;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,eAC5E;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CA3CuBJ,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}