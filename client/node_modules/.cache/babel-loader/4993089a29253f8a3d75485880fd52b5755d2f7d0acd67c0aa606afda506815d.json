{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\components\\\\chatOnline\\\\ChatOnline.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./chatOnline.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatOnline({\n  onlineUsers,\n  currentId,\n  setCurrentChat\n}) {\n  _s();\n  const [friends, setFriends] = useState([]);\n  const [onlinefriends, setOnlineFriends] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  useEffect(() => {\n    if (!currentId) {\n      console.error(\"currentId is undefined or null\");\n      return;\n    }\n    const getFriends = async () => {\n      try {\n        const res = await axios.get(\"/users/friends/\" + currentId);\n        setFriends(res.data);\n      } catch (err) {\n        console.error(\"Error fetching friends:\", err.message);\n      }\n    };\n    getFriends();\n  }, [currentId]);\n  useEffect(() => {\n    setOnlineFriends(friends.filter(f => onlineUsers.includes(f._id)));\n  }, [friends, onlineUsers]);\n  const handleClick = async user => {\n    try {\n      const res = await axios.get(`/conversations/find/${currentId}/${user._id}`);\n      setCurrentChat(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatOnline\",\n    children: onlinefriends.map(o => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatOnlineFriend\",\n      onClick: () => {\n        handleClick(o);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnlineImageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chatOnlineImage\",\n          src: o !== null && o !== void 0 && o.profilePicture ? PF + (o === null || o === void 0 ? void 0 : o.profilePicture) : PF + \"perdon/noAvatar.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineBadge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatOnlineName\",\n        children: o.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatOnline, \"SiM+q5PEu+4bs0I0Y7Hs+sjwF9I=\");\n_c = ChatOnline;\nvar _c;\n$RefreshReg$(_c, \"ChatOnline\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","ChatOnline","onlineUsers","currentId","setCurrentChat","_s","friends","setFriends","onlinefriends","setOnlineFriends","PF","process","env","REACT_APP_PUBLIC_FOLDER","console","error","getFriends","res","get","data","err","message","filter","f","includes","_id","handleClick","user","log","className","children","map","o","onClick","src","profilePicture","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/components/chatOnline/ChatOnline.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./chatOnline.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\r\n\r\n  const [friends, setFriends] = useState([]);\r\n  const [onlinefriends, setOnlineFriends] = useState([]);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  useEffect(() => {\r\n    if (!currentId) {\r\n        console.error(\"currentId is undefined or null\");\r\n        return;\r\n    }\r\n\r\n    const getFriends = async () => {\r\n        try {\r\n            const res = await axios.get(\"/users/friends/\" + currentId);\r\n            setFriends(res.data);\r\n        } catch (err) {\r\n            console.error(\"Error fetching friends:\", err.message);\r\n        }\r\n    };\r\n\r\n    getFriends();\r\n}, [currentId]);\r\n\r\n  useEffect(() => {\r\n    setOnlineFriends(friends.filter((f) => onlineUsers.includes(f._id)));\r\n  }, [friends, onlineUsers]);\r\n  \r\n  const handleClick = async (user) => {\r\n    try {\r\n      const res = await axios.get(`/conversations/find/${currentId}/${user._id}`);\r\n      setCurrentChat(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      \r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"chatOnline\">\r\n      {onlinefriends.map((o) => (\r\n        \r\n        <div className=\"chatOnlineFriend\" onClick={()=>{handleClick(o)}}>\r\n        <div className=\"chatOnlineImageContainer\">\r\n            <img className=\"chatOnlineImage\" src={o?.profilePicture\r\n              ? PF + o?.profilePicture\r\n              : PF + \"perdon/noAvatar.png\"\r\n            } alt=\"\" />\r\n          <div className=\"chatOnlineBadge\"></div>\r\n        </div>\r\n          <span className=\"chatOnlineName\">{o.username }</span>\r\n      </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}