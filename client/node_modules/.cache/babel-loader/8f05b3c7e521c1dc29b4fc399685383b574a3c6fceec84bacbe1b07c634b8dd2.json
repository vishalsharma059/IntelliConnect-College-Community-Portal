{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\components\\\\online\\\\Online.jsx\";\n// import \"./online.css\"\n\n// export default function Online({ user }) {\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n//   return (\n//     <li className=\"rightbarFriend\">\n//         <div className=\"rightbarProfileImageContainer\">\n//             <img className=\"rightbarProfileImage\" src= {PF+user.profilePicture} alt=\"\"  />\n//             <span className=\"rightbarOnline\"></span>\n//         </div>\n//         <span className=\"rightbarUsername\">{ user.username }</span>\n//     </li>\n//   )\n// }\n\nimport \"./online.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Online({\n  user\n}) {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER || \"http://localhost:8800/images/\";\n  const defaultProfilePic = PF + \"person/noAvatar.png\";\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"rightbarFriend\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbarProfileImageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"rightbarProfileImage\",\n        src: user.profilePicture ? PF + user.profilePicture : defaultProfilePic,\n        alt: user.username,\n        onError: e => {\n          e.target.src = defaultProfilePic;\n        } // Fallback if image fails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rightbarOnline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"rightbarUsername\",\n      children: user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Online;\nvar _c;\n$RefreshReg$(_c, \"Online\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Online","user","PF","process","env","REACT_APP_PUBLIC_FOLDER","defaultProfilePic","className","children","src","profilePicture","alt","username","onError","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/components/online/Online.jsx"],"sourcesContent":["// import \"./online.css\"\r\n\r\n// export default function Online({ user }) {\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n//   return (\r\n//     <li className=\"rightbarFriend\">\r\n//         <div className=\"rightbarProfileImageContainer\">\r\n//             <img className=\"rightbarProfileImage\" src= {PF+user.profilePicture} alt=\"\"  />\r\n//             <span className=\"rightbarOnline\"></span>\r\n//         </div>\r\n//         <span className=\"rightbarUsername\">{ user.username }</span>\r\n//     </li>\r\n//   )\r\n// }\r\n\r\nimport \"./online.css\";\r\n\r\nexport default function Online({ user }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER || \"http://localhost:8800/images/\";\r\n  const defaultProfilePic = PF + \"person/noAvatar.png\";\r\n\r\n  return (\r\n    <li className=\"rightbarFriend\">\r\n      <div className=\"rightbarProfileImageContainer\">\r\n        <img \r\n          className=\"rightbarProfileImage\" \r\n          src={user.profilePicture ? PF + user.profilePicture : defaultProfilePic} \r\n          alt={user.username}\r\n          onError={(e) => { e.target.src = defaultProfilePic; }} // Fallback if image fails\r\n        />\r\n        <span className=\"rightbarOnline\"></span>\r\n      </div>\r\n      <span className=\"rightbarUsername\">{user.username}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,cAAc;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACvC,MAAMC,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,IAAI,+BAA+B;EACjF,MAAMC,iBAAiB,GAAGJ,EAAE,GAAG,qBAAqB;EAEpD,oBACEH,OAAA;IAAIQ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC5BT,OAAA;MAAKQ,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC5CT,OAAA;QACEQ,SAAS,EAAC,sBAAsB;QAChCE,GAAG,EAAER,IAAI,CAACS,cAAc,GAAGR,EAAE,GAAGD,IAAI,CAACS,cAAc,GAAGJ,iBAAkB;QACxEK,GAAG,EAAEV,IAAI,CAACW,QAAS;QACnBC,OAAO,EAAGC,CAAC,IAAK;UAAEA,CAAC,CAACC,MAAM,CAACN,GAAG,GAAGH,iBAAiB;QAAE,CAAE,CAAC;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACFpB,OAAA;QAAMQ,SAAS,EAAC;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACNpB,OAAA;MAAMQ,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEP,IAAI,CAACW;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAET;AAACC,EAAA,GAlBuBpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}