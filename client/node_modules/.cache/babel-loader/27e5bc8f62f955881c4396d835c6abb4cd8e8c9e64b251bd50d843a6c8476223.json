{"ast":null,"code":"// import { useEffect, useState } from \"react\"\n// import \"./conversation.css\"\n// import axios from \"axios\";\n\n// export default function Conversation({ conversation, currentUser }) {\n//   const [user, setUser] = useState(null);\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER\n\n//   useEffect(() => {\n//     if (!conversation || !conversation.members) {\n//       console.error(\"Invalid conversation object:\", conversation);\n//       return;\n//     }\n\n//     const friendId = conversation.members.find((m) => m !== currentUser._id);\n\n//     const getUser = async () => {\n//       try {\n//         const res = await axios.get(\"/users?userId=\" + friendId);\n//         setUser(res.data);\n//       } catch (err) {\n//         console.log(err);\n//       }\n//     }\n//     getUser();\n//   }, [currentUser, conversation]);\n\n//   return (\n//     <div className=\"conversation\">\n//       {!user ? (\n//         <span>Loading...</span>\n//       ) : (\n//         <>\n//             <img\n//     className=\"conversationImage\"\n//     src={\n//       user?.profilePicture\n//         ? PF + user.profilePicture\n//         : PF + \"person/noAvatar.png\"\n//     }\n//     alt=\"Profile\"\n//   />\n//           <span className=\"conversationName\">{user?.username || \"Unknown User\"}</span>\n//         </>\n//       )}\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["D:/IntelliConnect/client/src/components/conversation/Conversation.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\"\r\n// import \"./conversation.css\"\r\n// import axios from \"axios\";\r\n\r\n// export default function Conversation({ conversation, currentUser }) {\r\n//   const [user, setUser] = useState(null);\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER\r\n  \r\n//   useEffect(() => {\r\n//     if (!conversation || !conversation.members) {\r\n//       console.error(\"Invalid conversation object:\", conversation);\r\n//       return;\r\n//     }\r\n\r\n//     const friendId = conversation.members.find((m) => m !== currentUser._id);\r\n\r\n//     const getUser = async () => {\r\n//       try {\r\n//         const res = await axios.get(\"/users?userId=\" + friendId);\r\n//         setUser(res.data);\r\n//       } catch (err) {\r\n//         console.log(err);\r\n//       }\r\n//     }\r\n//     getUser();\r\n//   }, [currentUser, conversation]);\r\n\r\n//   return (\r\n//     <div className=\"conversation\">\r\n//       {!user ? (\r\n//         <span>Loading...</span>\r\n//       ) : (\r\n//         <>\r\n//             <img\r\n//     className=\"conversationImage\"\r\n//     src={\r\n//       user?.profilePicture\r\n//         ? PF + user.profilePicture\r\n//         : PF + \"person/noAvatar.png\"\r\n//     }\r\n//     alt=\"Profile\"\r\n//   />\r\n//           <span className=\"conversationName\">{user?.username || \"Unknown User\"}</span>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}