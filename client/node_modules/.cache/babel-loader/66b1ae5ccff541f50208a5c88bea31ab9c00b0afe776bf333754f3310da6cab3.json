{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\pages\\\\editProfile\\\\EditProfile.jsx\",\n  _s = $RefreshSig$();\n// import \"./editProfile.css\";\n// import Topbar from \"../../components/topbar/Topbar\";\n// import Sidebar from \"../../components/sidebar/Sidebar\";\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n\n// export default function EditProfile() {\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n//   const username = useParams().username;\n//   const navigate = useNavigate();\n\n//   const [user, setUser] = useState({});\n//   const [formData, setFormData] = useState({\n//     profilePicture: \"\",\n//     coverPicture: \"\",\n//     desc: \"\",\n//     college: \"\",\n//     role: \"\",\n//     course: \"\",\n//   });\n\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const res = await axios.get(\n//           `http://localhost:8800/api/users?username=${username}`\n//         );\n//         setUser(res.data);\n//         setFormData({\n//           profilePicture: res.data.profilePicture || \"\",\n//           coverPicture: res.data.coverPicture || \"\",\n//           desc: res.data.desc || \"\",\n//           college: res.data.college || \"\",\n//           role: res.data.role || \"\",\n//           course: res.data.course || \"\",\n//         });\n//       } catch (error) {\n//         console.error(\"Error fetching user:\", error);\n//       }\n//     };\n//     fetchUser();\n//   }, [username]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleFileChange = (e) => {\n//       const { name, files } = e.target;\n//       if (files[0]) {\n//           setFormData((prev) => ({ ...prev, [name]: files[0] }));\n//       }\n//   };\n\n//   //   const handleSubmit = async (e) => {\n//   //       e.preventDefault();\n\n//   //       const updatedData = {\n//   //         userId: user._id,  // Pass the userId directly in the JSON body\n//   //         desc: formData.desc,\n//   //         college: formData.college,\n//   //         role: formData.role,\n//   //         course: formData.course,\n//   //       };\n\n//   //       try {\n//   //         const res = await axios.put(\n//   //           `http://localhost:8800/api/users/${user._id}`,\n//   //           updatedData,  // Send data as JSON instead of FormData\n//   //           {\n//   //             headers: {\n//   //               \"Content-Type\": \"application/json\",  // Specify JSON content type\n//   //             },\n//   //           }\n//   //         );\n//   //         alert(\"Profile updated successfully!\");\n//   //         navigate(`/profile/${username}`);\n//   //       } catch (error) {\n//   //         console.error(\"Error updating profile:\", error);\n//   //         alert(\"Failed to update profile.\");\n//   //       }\n//   // };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const updatedData = {\n//         userId: user._id,\n//         desc: formData.desc,\n//         college: formData.college,\n//         role: formData.role,\n//         course: formData.course,\n//         profilePicture: formData.profilePicture, // Use uploaded file name\n//         coverPicture: formData.coverPicture, // Use uploaded file name\n//     };\n\n//     try {\n//         await axios.put(`http://localhost:8800/api/users/${user._id}`, updatedData);\n//         alert(\"Profile updated successfully!\");\n//         navigate(`/profile/${username}`);\n//     } catch (error) {\n//         console.error(\"Error updating profile:\", error);\n//         alert(\"Failed to update profile.\");\n//     }\n// };\n\n//   const handleProfilePictureSubmit = async () => {\n//     if (formData.profilePicture) {\n//         const data = new FormData();\n//         const fileName = Date.now() + formData.profilePicture.name;\n//         data.append(\"file\", formData.profilePicture);\n\n//         try {\n//             const res = await axios.post(\"http://localhost:8800/api/upload\", data);\n//             setFormData((prev) => ({\n//                 ...prev,\n//                 profilePicture: res.data.fileName, // Save the file name returned from the backend\n//             }));\n//             alert(\"Profile picture uploaded successfully!\");\n//         } catch (err) {\n//             console.error(\"Error uploading profile picture:\", err);\n//         }\n//     }\n// };\n\n// const handleCoverPictureSubmit = async () => {\n//     if (formData.coverPicture) {\n//         const data = new FormData();\n//         const fileName = Date.now() + formData.coverPicture.name;\n//         data.append(\"file\", formData.coverPicture);\n\n//         try {\n//             const res = await axios.post(\"http://localhost:8800/api/upload\", data);\n//             setFormData((prev) => ({\n//                 ...prev,\n//                 coverPicture: res.data.fileName, // Save the file name returned from the backend\n//             }));\n//             alert(\"Cover picture uploaded successfully!\");\n//         } catch (err) {\n//             console.error(\"Error uploading cover picture:\", err);\n//         }\n//     }\n// };\n\n//   return (\n//       <>\n//       <Topbar />\n//       <div className=\"editProfile\">\n//         <Sidebar />\n//         <div className=\"editProfileWrapper\">\n//           <h2>Edit Profile</h2>\n//           <form className=\"editProfileForm\" onSubmit={handleSubmit}>\n//             <label>Profile Picture</label>\n//             <input type=\"file\" name=\"profilePicture\" onChange={handleFileChange} />\n//             <button type=\"button\" onClick={handleProfilePictureSubmit}>\n//               Upload Profile Picture\n//             </button>\n\n//             <label>Cover Picture</label>\n//             <input type=\"file\" name=\"coverPicture\" onChange={handleFileChange} />\n//             <button type=\"button\" onClick={handleCoverPictureSubmit}>\n//               Upload Cover Picture\n//             </button>\n\n//             <label>Description</label>\n//             <textarea\n//               name=\"desc\"\n//               value={formData.desc}\n//               onChange={handleInputChange}\n//               placeholder=\"Write about yourself...\"\n//             />\n\n//             <label>College</label>\n//             <input\n//               type=\"text\"\n//               name=\"college\"\n//               value={formData.college}\n//               onChange={handleInputChange}\n//               placeholder=\"Enter your college\"\n//             />\n\n//             <label>Role</label>\n//             <input\n//               type=\"text\"\n//               name=\"role\"\n//               value={formData.role}\n//               onChange={handleInputChange}\n//               placeholder=\"Enter your role\"\n//             />\n\n//             <label>Course</label>\n//             <input\n//               type=\"text\"\n//               name=\"course\"\n//               value={formData.course}\n//               onChange={handleInputChange}\n//               placeholder=\"Enter your course\"\n//             />\n\n//             <button type=\"submit\">Save Changes</button>\n//           </form>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\nimport \"./editProfile.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditProfile() {\n  _s();\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const username = useParams().username;\n  const navigate = useNavigate();\n  const [user, setUser] = useState({});\n  const [formData, setFormData] = useState({\n    profilePicture: \"\",\n    coverPicture: \"\",\n    desc: \"\",\n    college: \"\",\n    role: \"\",\n    course: \"\"\n  });\n  const [profilePictureFile, setProfilePictureFile] = useState(null);\n  const [coverPictureFile, setCoverPictureFile] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8800/api/users?username=${username}`);\n        setUser(res.data);\n        setFormData({\n          profilePicture: res.data.profilePicture || \"\",\n          coverPicture: res.data.coverPicture || \"\",\n          desc: res.data.desc || \"\",\n          college: res.data.college || \"\",\n          role: res.data.role || \"\",\n          course: res.data.course || \"\"\n        });\n      } catch (error) {\n        console.error(\"Error fetching user:\", error);\n      }\n    };\n    fetchUser();\n  }, [username]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const updatedData = {\n      userId: user._id,\n      desc: formData.desc,\n      college: formData.college,\n      role: formData.role,\n      course: formData.course\n    };\n\n    // Handle Profile Picture Upload\n    if (profilePictureFile) {\n      const profileData = new FormData();\n      const fileName = Date.now() + profilePictureFile.name;\n      profileData.append(\"name\", fileName);\n      profileData.append(\"file\", profilePictureFile);\n      updatedData.profilePicture = fileName;\n      try {\n        await axios.post(\"http://localhost:8800/api/upload\", profileData);\n      } catch (err) {\n        console.error(\"Error uploading profile picture:\", err);\n      }\n    }\n\n    // Handle Cover Picture Upload\n    if (coverPictureFile) {\n      const coverData = new FormData();\n      const fileName = Date.now() + coverPictureFile.name;\n      coverData.append(\"name\", fileName);\n      coverData.append(\"file\", coverPictureFile);\n      updatedData.coverPicture = fileName;\n      try {\n        await axios.post(\"http://localhost:8800/api/upload\", coverData);\n      } catch (err) {\n        console.error(\"Error uploading cover picture:\", err);\n      }\n    }\n\n    // Update User Data\n    try {\n      await axios.put(`http://localhost:8800/api/users/${user._id}`, updatedData);\n      alert(\"Profile updated successfully!\");\n      navigate(`/profile/${username}`);\n    } catch (err) {\n      console.error(\"Error updating profile:\", err);\n      alert(\"Failed to update profile.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editProfile\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editProfileWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"editProfileForm\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setProfilePictureFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cover Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setCoverPictureFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"desc\",\n            value: formData.desc,\n            onChange: handleInputChange,\n            placeholder: \"Write about yourself...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"College\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"college\",\n            value: formData.college,\n            onChange: handleInputChange,\n            placeholder: \"Enter your college\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"role\",\n            value: formData.role,\n            onChange: handleInputChange,\n            placeholder: \"Enter your role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"course\",\n            value: formData.course,\n            onChange: handleInputChange,\n            placeholder: \"Enter your course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EditProfile, \"ikr9qLEOPuYil0tt/8UBOGNacok=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["Topbar","Sidebar","useState","useEffect","axios","useParams","useNavigate","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","EditProfile","_s","PF","process","env","REACT_APP_PUBLIC_FOLDER","username","navigate","user","setUser","formData","setFormData","profilePicture","coverPicture","desc","college","role","course","profilePictureFile","setProfilePictureFile","coverPictureFile","setCoverPictureFile","fetchUser","res","get","data","error","console","handleInputChange","e","name","value","target","prev","handleSubmit","preventDefault","updatedData","userId","_id","profileData","FormData","fileName","Date","now","append","post","err","coverData","put","alert","children","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onChange","files","placeholder","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/pages/editProfile/EditProfile.jsx"],"sourcesContent":["// import \"./editProfile.css\";\r\n// import Topbar from \"../../components/topbar/Topbar\";\r\n// import Sidebar from \"../../components/sidebar/Sidebar\";\r\n// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n// export default function EditProfile() {\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n//   const username = useParams().username;\r\n//   const navigate = useNavigate();\r\n\r\n//   const [user, setUser] = useState({});\r\n//   const [formData, setFormData] = useState({\r\n//     profilePicture: \"\",\r\n//     coverPicture: \"\",\r\n//     desc: \"\",\r\n//     college: \"\",\r\n//     role: \"\",\r\n//     course: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const res = await axios.get(\r\n//           `http://localhost:8800/api/users?username=${username}`\r\n//         );\r\n//         setUser(res.data);\r\n//         setFormData({\r\n//           profilePicture: res.data.profilePicture || \"\",\r\n//           coverPicture: res.data.coverPicture || \"\",\r\n//           desc: res.data.desc || \"\",\r\n//           college: res.data.college || \"\",\r\n//           role: res.data.role || \"\",\r\n//           course: res.data.course || \"\",\r\n//         });\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user:\", error);\r\n//       }\r\n//     };\r\n//     fetchUser();\r\n//   }, [username]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//       const { name, files } = e.target;\r\n//       if (files[0]) {\r\n//           setFormData((prev) => ({ ...prev, [name]: files[0] }));\r\n//       }\r\n//   };\r\n    \r\n//   //   const handleSubmit = async (e) => {\r\n//   //       e.preventDefault();\r\n      \r\n//   //       const updatedData = {\r\n//   //         userId: user._id,  // Pass the userId directly in the JSON body\r\n//   //         desc: formData.desc,\r\n//   //         college: formData.college,\r\n//   //         role: formData.role,\r\n//   //         course: formData.course,\r\n//   //       };\r\n      \r\n//   //       try {\r\n//   //         const res = await axios.put(\r\n//   //           `http://localhost:8800/api/users/${user._id}`,\r\n//   //           updatedData,  // Send data as JSON instead of FormData\r\n//   //           {\r\n//   //             headers: {\r\n//   //               \"Content-Type\": \"application/json\",  // Specify JSON content type\r\n//   //             },\r\n//   //           }\r\n//   //         );\r\n//   //         alert(\"Profile updated successfully!\");\r\n//   //         navigate(`/profile/${username}`);\r\n//   //       } catch (error) {\r\n//   //         console.error(\"Error updating profile:\", error);\r\n//   //         alert(\"Failed to update profile.\");\r\n//   //       }\r\n//   // };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const updatedData = {\r\n//         userId: user._id,\r\n//         desc: formData.desc,\r\n//         college: formData.college,\r\n//         role: formData.role,\r\n//         course: formData.course,\r\n//         profilePicture: formData.profilePicture, // Use uploaded file name\r\n//         coverPicture: formData.coverPicture, // Use uploaded file name\r\n//     };\r\n\r\n//     try {\r\n//         await axios.put(`http://localhost:8800/api/users/${user._id}`, updatedData);\r\n//         alert(\"Profile updated successfully!\");\r\n//         navigate(`/profile/${username}`);\r\n//     } catch (error) {\r\n//         console.error(\"Error updating profile:\", error);\r\n//         alert(\"Failed to update profile.\");\r\n//     }\r\n// };\r\n\r\n  \r\n//   const handleProfilePictureSubmit = async () => {\r\n//     if (formData.profilePicture) {\r\n//         const data = new FormData();\r\n//         const fileName = Date.now() + formData.profilePicture.name;\r\n//         data.append(\"file\", formData.profilePicture);\r\n\r\n//         try {\r\n//             const res = await axios.post(\"http://localhost:8800/api/upload\", data);\r\n//             setFormData((prev) => ({\r\n//                 ...prev,\r\n//                 profilePicture: res.data.fileName, // Save the file name returned from the backend\r\n//             }));\r\n//             alert(\"Profile picture uploaded successfully!\");\r\n//         } catch (err) {\r\n//             console.error(\"Error uploading profile picture:\", err);\r\n//         }\r\n//     }\r\n// };\r\n\r\n// const handleCoverPictureSubmit = async () => {\r\n//     if (formData.coverPicture) {\r\n//         const data = new FormData();\r\n//         const fileName = Date.now() + formData.coverPicture.name;\r\n//         data.append(\"file\", formData.coverPicture);\r\n\r\n//         try {\r\n//             const res = await axios.post(\"http://localhost:8800/api/upload\", data);\r\n//             setFormData((prev) => ({\r\n//                 ...prev,\r\n//                 coverPicture: res.data.fileName, // Save the file name returned from the backend\r\n//             }));\r\n//             alert(\"Cover picture uploaded successfully!\");\r\n//         } catch (err) {\r\n//             console.error(\"Error uploading cover picture:\", err);\r\n//         }\r\n//     }\r\n// };\r\n        \r\n//   return (\r\n//       <>\r\n//       <Topbar />\r\n//       <div className=\"editProfile\">\r\n//         <Sidebar />\r\n//         <div className=\"editProfileWrapper\">\r\n//           <h2>Edit Profile</h2>\r\n//           <form className=\"editProfileForm\" onSubmit={handleSubmit}>\r\n//             <label>Profile Picture</label>\r\n//             <input type=\"file\" name=\"profilePicture\" onChange={handleFileChange} />\r\n//             <button type=\"button\" onClick={handleProfilePictureSubmit}>\r\n//               Upload Profile Picture\r\n//             </button>\r\n\r\n//             <label>Cover Picture</label>\r\n//             <input type=\"file\" name=\"coverPicture\" onChange={handleFileChange} />\r\n//             <button type=\"button\" onClick={handleCoverPictureSubmit}>\r\n//               Upload Cover Picture\r\n//             </button>\r\n\r\n//             <label>Description</label>\r\n//             <textarea\r\n//               name=\"desc\"\r\n//               value={formData.desc}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"Write about yourself...\"\r\n//             />\r\n\r\n//             <label>College</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"college\"\r\n//               value={formData.college}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"Enter your college\"\r\n//             />\r\n\r\n//             <label>Role</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"role\"\r\n//               value={formData.role}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"Enter your role\"\r\n//             />\r\n\r\n//             <label>Course</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"course\"\r\n//               value={formData.course}\r\n//               onChange={handleInputChange}\r\n//               placeholder=\"Enter your course\"\r\n//             />\r\n\r\n//             <button type=\"submit\">Save Changes</button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\nimport \"./editProfile.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\n\r\nexport default function EditProfile() {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const username = useParams().username;\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    profilePicture: \"\",\r\n    coverPicture: \"\",\r\n    desc: \"\",\r\n    college: \"\",\r\n    role: \"\",\r\n    course: \"\",\r\n  });\r\n\r\n  const [profilePictureFile, setProfilePictureFile] = useState(null);\r\n  const [coverPictureFile, setCoverPictureFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `http://localhost:8800/api/users?username=${username}`\r\n        );\r\n        setUser(res.data);\r\n        setFormData({\r\n          profilePicture: res.data.profilePicture || \"\",\r\n          coverPicture: res.data.coverPicture || \"\",\r\n          desc: res.data.desc || \"\",\r\n          college: res.data.college || \"\",\r\n          role: res.data.role || \"\",\r\n          course: res.data.course || \"\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching user:\", error);\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [username]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const updatedData = {\r\n      userId: user._id,\r\n      desc: formData.desc,\r\n      college: formData.college,\r\n      role: formData.role,\r\n      course: formData.course,\r\n    };\r\n\r\n    // Handle Profile Picture Upload\r\n    if (profilePictureFile) {\r\n      const profileData = new FormData();\r\n      const fileName = Date.now() + profilePictureFile.name;\r\n      profileData.append(\"name\", fileName);\r\n      profileData.append(\"file\", profilePictureFile);\r\n      updatedData.profilePicture = fileName;\r\n\r\n      try {\r\n        await axios.post(\"http://localhost:8800/api/upload\", profileData);\r\n      } catch (err) {\r\n        console.error(\"Error uploading profile picture:\", err);\r\n      }\r\n    }\r\n\r\n    // Handle Cover Picture Upload\r\n    if (coverPictureFile) {\r\n      const coverData = new FormData();\r\n      const fileName = Date.now() + coverPictureFile.name;\r\n      coverData.append(\"name\", fileName);\r\n      coverData.append(\"file\", coverPictureFile);\r\n      updatedData.coverPicture = fileName;\r\n\r\n      try {\r\n        await axios.post(\"http://localhost:8800/api/upload\", coverData);\r\n      } catch (err) {\r\n        console.error(\"Error uploading cover picture:\", err);\r\n      }\r\n    }\r\n\r\n    // Update User Data\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:8800/api/users/${user._id}`,\r\n        updatedData\r\n      );\r\n      alert(\"Profile updated successfully!\");\r\n      navigate(`/profile/${username}`);\r\n    } catch (err) {\r\n      console.error(\"Error updating profile:\", err);\r\n      alert(\"Failed to update profile.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className=\"editProfile\">\r\n        <Sidebar />\r\n        <div className=\"editProfileWrapper\">\r\n          <h2>Edit Profile</h2>\r\n          <form className=\"editProfileForm\" onSubmit={handleSubmit}>\r\n            <label>Profile Picture</label>\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => setProfilePictureFile(e.target.files[0])}\r\n            />\r\n\r\n            <label>Cover Picture</label>\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => setCoverPictureFile(e.target.files[0])}\r\n            />\r\n\r\n            <label>Description</label>\r\n            <textarea\r\n              name=\"desc\"\r\n              value={formData.desc}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Write about yourself...\"\r\n            />\r\n\r\n            <label>College</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"college\"\r\n              value={formData.college}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your college\"\r\n            />\r\n\r\n            <label>Role</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"role\"\r\n              value={formData.role}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your role\"\r\n            />\r\n\r\n            <label>Course</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"course\"\r\n              value={formData.course}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your course\"\r\n            />\r\n\r\n            <button type=\"submit\">Save Changes</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,mBAAmB;AAC1B,OAAOA,MAAM,MAAM,gCAAgC;AACnD,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}