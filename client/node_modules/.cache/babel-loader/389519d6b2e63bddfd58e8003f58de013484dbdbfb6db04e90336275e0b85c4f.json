{"ast":null,"code":"// import \"./profile.css\";\n// import Topbar from \"../../components/topbar/Topbar\";\n// import Sidebar from \"../../components/sidebar/Sidebar\";\n// import Feed from \"../../components/feed/Feed\";\n// import Rightbar from \"../../components/rightbar/Rightbar\";\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { useParams, Link } from \"react-router-dom\";\n\n// export default function Profile() {\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n//   const [user, setUser] = useState({})\n//   const username = useParams().username;\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const res = await axios.get(`http://localhost:8800/api/users?username=${username}`);\n//         setUser(res.data);\n//       } catch (error) {\n//         setUser(null)\n//         console.error(\"Error fetching user:\", error);\n//       }\n//     };\n//     fetchUser();\n//   }, [username]);\n\n//   return (\n//     <>\n//       <Topbar />\n//       <div className=\"profile\">\n//         <Sidebar />\n//         <div className=\"profileRight\">\n//           <div className=\"profileRightTop\">\n//             <div className=\"profileCover\">\n//               {/* <img className=\"profileCoverImage\" src={ user.coverPicture ? PF + user.coverPicture : PF+\"person/noCover.png\"}  alt=\"\" /> */}\n//               <img\n//   className=\"profileCoverImage\"\n//   src={\n//     user.coverPicture\n//       ? user.coverPicture.startsWith(\"http\")\n//         ? user.coverPicture\n//         : PF + user.coverPicture\n//       : PF + \"person/noCover.png\"\n//   }\n//   alt=\"\"\n// />\n//               {/* <img className=\"profileUserImage\" src= { user.profilePicture ? PF + user.profilePicture : PF+\"person/noAvatar.png\"} alt=\"\" /> */}\n//               <img\n//   className=\"profileUserImage\"\n//   src={\n//     user.profilePicture\n//       ? user.profilePicture.startsWith(\"http\")\n//         ? user.profilePicture\n//         : PF + user.profilePicture\n//       : PF + \"person/noAvatar.png\"\n//   }\n//   alt=\"\"\n// />\n//             </div>\n//             <div className=\"profileInfo\">\n//               <h4 className=\"profileInfoName\">{user.username}</h4>\n//               <span className=\"profileInfoDesc\">{user.desc}</span>\n//             </div>\n//           </div>\n//           <div className=\"profileRightBottom\">\n//             <Feed username={ username } />\n//             <Rightbar user={user} />\n//           </div>\n//           {/* Add Edit Profile Link */}\n//           <div className=\"editProfileLink\">\n//             <Link to={`/editProfile/${username}`} className=\"editProfileButton\">\n//               Edit Profile\n//             </Link>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/IntelliConnect/client/src/pages/profile/Profile.jsx"],"sourcesContent":["// import \"./profile.css\";\r\n// import Topbar from \"../../components/topbar/Topbar\";\r\n// import Sidebar from \"../../components/sidebar/Sidebar\";\r\n// import Feed from \"../../components/feed/Feed\";\r\n// import Rightbar from \"../../components/rightbar/Rightbar\";\r\n// import axios from \"axios\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { useParams, Link } from \"react-router-dom\";\r\n\r\n// export default function Profile() {\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n//   const [user, setUser] = useState({})\r\n//   const username = useParams().username;\r\n//   const navigate = useNavigate();\r\n  \r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:8800/api/users?username=${username}`);\r\n//         setUser(res.data);\r\n//       } catch (error) {\r\n//         setUser(null)\r\n//         console.error(\"Error fetching user:\", error);\r\n//       }\r\n//     };\r\n//     fetchUser();\r\n//   }, [username]);\r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <Topbar />\r\n//       <div className=\"profile\">\r\n//         <Sidebar />\r\n//         <div className=\"profileRight\">\r\n//           <div className=\"profileRightTop\">\r\n//             <div className=\"profileCover\">\r\n//               {/* <img className=\"profileCoverImage\" src={ user.coverPicture ? PF + user.coverPicture : PF+\"person/noCover.png\"}  alt=\"\" /> */}\r\n//               <img\r\n//   className=\"profileCoverImage\"\r\n//   src={\r\n//     user.coverPicture\r\n//       ? user.coverPicture.startsWith(\"http\")\r\n//         ? user.coverPicture\r\n//         : PF + user.coverPicture\r\n//       : PF + \"person/noCover.png\"\r\n//   }\r\n//   alt=\"\"\r\n// />\r\n//               {/* <img className=\"profileUserImage\" src= { user.profilePicture ? PF + user.profilePicture : PF+\"person/noAvatar.png\"} alt=\"\" /> */}\r\n//               <img\r\n//   className=\"profileUserImage\"\r\n//   src={\r\n//     user.profilePicture\r\n//       ? user.profilePicture.startsWith(\"http\")\r\n//         ? user.profilePicture\r\n//         : PF + user.profilePicture\r\n//       : PF + \"person/noAvatar.png\"\r\n//   }\r\n//   alt=\"\"\r\n// />\r\n//             </div>\r\n//             <div className=\"profileInfo\">\r\n//               <h4 className=\"profileInfoName\">{user.username}</h4>\r\n//               <span className=\"profileInfoDesc\">{user.desc}</span>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"profileRightBottom\">\r\n//             <Feed username={ username } />\r\n//             <Rightbar user={user} />\r\n//           </div>\r\n//           {/* Add Edit Profile Link */}\r\n//           <div className=\"editProfileLink\">\r\n//             <Link to={`/editProfile/${username}`} className=\"editProfileButton\">\r\n//               Edit Profile\r\n//             </Link>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}