{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n  _s = $RefreshSig$();\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversation/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const socket = useRef();\n  const scrollRef = useRef(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [unreadConversations, setUnreadConversations] = useState(new Set());\n\n  // Establish the socket connection\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n\n    // Disconnect socket on component unmount\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   if (arrivalMessage && currentChat?.members.includes(arrivalMessage.sender)) {\n  //     setMessages((prev) => [...prev, arrivalMessage]);\n  //   }\n  // }, [arrivalMessage, currentChat]);\n\n  useEffect(() => {\n    if (arrivalMessage) {\n      console.log(\"Arrival Message:\", arrivalMessage);\n      if (currentChat !== null && currentChat !== void 0 && currentChat.members.includes(arrivalMessage.sender)) {\n        setMessages(prev => [...prev, arrivalMessage]);\n      } else {\n        const conv = conversations.find(conv => conv.members.includes(arrivalMessage.sender));\n        if (conv) {\n          console.log(\"Highlighting conversation:\", conv._id);\n          setUnreadConversations(prev => new Set(prev).add(conv._id));\n        }\n      }\n    }\n  }, [arrivalMessage, currentChat, conversations]);\n  const handleChatClick = c => {\n    setCurrentChat(c);\n    setUnreadConversations(prev => {\n      const updated = new Set([...prev]);\n      updated.add(conv._id);\n      return updated;\n    });\n  };\n\n  // Handle socket events for online users\n  useEffect(() => {\n    const handleGetUsers = users => {\n      setOnlineUsers(user.following.filter(f => users.some(u => u.userId === f)));\n    };\n    if (user !== null && user !== void 0 && user._id) {\n      socket.current.emit(\"addUser\", user._id);\n      socket.current.on(\"getUsers\", handleGetUsers);\n    }\n\n    // Cleanup to avoid duplicate event listeners\n    return () => {\n      socket.current.off(\"getUsers\", handleGetUsers);\n    };\n  }, [user]);\n\n  // Fetch conversations\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.error(\"Error fetching conversations:\", err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  // Fetch messages\n  useEffect(() => {\n    const getMessage = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.error(\"Error fetching messages:\", err);\n      }\n    };\n    if (currentChat) getMessage();\n  }, [currentChat]);\n\n  // Handle message submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return; // Prevent empty submissions\n\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    setIsLoading(true); // Start loading\n\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages(prev => [...prev, res.data]);\n      setNewMessage(\"\"); // Clear textarea\n    } catch (err) {\n      console.error(\"Error sending message:\", err);\n      alert(\"Failed to send message. Please try again.\");\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n\n  // Scroll to the bottom when a new message is added\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), conversations && conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleChatClick(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user,\n              highlight: unreadConversations.has(c._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 7\n            }, this)\n          }, c._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 5\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map((m, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage,\n                disabled: isLoading // Disable while loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                disabled: isLoading // Disable while loading\n                ,\n                children: isLoading ? \"Sending...\" : \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineUsers: onlineUsers,\n            currentId: user._id,\n            setCurrentChat: setCurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Messenger, \"2eOJYFABMQYyMQhaYRu6fobITVA=\");\n_c = Messenger;\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["Topbar","Conversation","Message","ChatOnline","useContext","useEffect","useRef","useState","AuthContext","axios","io","jsxDEV","_jsxDEV","Fragment","_Fragment","Messenger","_s","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","isLoading","setIsLoading","socket","scrollRef","user","unreadConversations","setUnreadConversations","Set","current","on","data","sender","senderId","text","createdAt","Date","now","disconnect","console","log","members","includes","prev","conv","find","_id","add","handleChatClick","c","updated","handleGetUsers","users","following","filter","f","some","u","userId","emit","off","getConversations","res","get","err","error","getMessage","handleSubmit","e","preventDefault","trim","message","conversationId","receiverId","member","post","alert","_scrollRef$current","scrollIntoView","behavior","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","map","onClick","conversation","currentUser","highlight","has","m","index","ref","own","onChange","target","value","disabled","currentId","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/pages/messenger/Messenger.jsx"],"sourcesContent":["import \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport default function Messenger() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const socket = useRef();\r\n  const scrollRef = useRef(null);\r\n  const { user } = useContext(AuthContext);\r\n  const [unreadConversations, setUnreadConversations] = useState(new Set());\r\n\r\n\r\n  // Establish the socket connection\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8900\");\r\n\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n\r\n    // Disconnect socket on component unmount\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (arrivalMessage && currentChat?.members.includes(arrivalMessage.sender)) {\r\n  //     setMessages((prev) => [...prev, arrivalMessage]);\r\n  //   }\r\n  // }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    if (arrivalMessage) {\r\n      console.log(\"Arrival Message:\", arrivalMessage);\r\n  \r\n      if (currentChat?.members.includes(arrivalMessage.sender)) {\r\n        setMessages((prev) => [...prev, arrivalMessage]);\r\n      } else {\r\n        const conv = conversations.find(conv =>\r\n          conv.members.includes(arrivalMessage.sender)\r\n        );\r\n        if (conv) {\r\n          console.log(\"Highlighting conversation:\", conv._id);\r\n          setUnreadConversations((prev) => new Set(prev).add(conv._id));\r\n        }\r\n      }\r\n    }\r\n  }, [arrivalMessage, currentChat, conversations]);\r\n  \r\n\r\n  const handleChatClick = (c) => {\r\n    setCurrentChat(c);\r\n    setUnreadConversations((prev) => {\r\n      const updated = new Set([...prev]);\r\n      updated.add(conv._id);\r\n      return updated;\r\n    });\r\n    \r\n  };\r\n  \r\n  \r\n\r\n  // Handle socket events for online users\r\n  useEffect(() => {\r\n    const handleGetUsers = (users) => {\r\n      setOnlineUsers(user.following.filter((f) => users.some((u) => u.userId === f)));\r\n    };\r\n\r\n    if (user?._id) {\r\n      socket.current.emit(\"addUser\", user._id);\r\n      socket.current.on(\"getUsers\", handleGetUsers);\r\n    }\r\n\r\n    // Cleanup to avoid duplicate event listeners\r\n    return () => {\r\n      socket.current.off(\"getUsers\", handleGetUsers);\r\n    };\r\n  }, [user]);\r\n\r\n  // Fetch conversations\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get(\"/conversations/\" + user._id);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching conversations:\", err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user._id]);\r\n\r\n  // Fetch messages\r\n  useEffect(() => {\r\n    const getMessage = async () => {\r\n      try {\r\n        const res = await axios.get(\"/messages/\" + currentChat?._id);\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching messages:\", err);\r\n      }\r\n    };\r\n    if (currentChat) getMessage();\r\n  }, [currentChat]);\r\n\r\n  // Handle message submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return; // Prevent empty submissions\r\n\r\n    const message = {\r\n      sender: user._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n\r\n    setIsLoading(true); // Start loading\r\n\r\n    const receiverId = currentChat.members.find((member) => member !== user._id);\r\n\r\n    socket.current.emit(\"sendMessage\", {\r\n      senderId: user._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\"/messages\", message);\r\n      setMessages((prev) => [...prev, res.data]);\r\n      setNewMessage(\"\"); // Clear textarea\r\n    } catch (err) {\r\n      console.error(\"Error sending message:\", err);\r\n      alert(\"Failed to send message. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  // Scroll to the bottom when a new message is added\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\r\n            {/* {conversations &&\r\n              conversations.map((c) => (\r\n                <div onClick={() => setCurrentChat(c)} key={c._id}>\r\n                  <Conversation conversation={c} currentUser={user} />\r\n                </div>\r\n              ))} */}\r\n            {conversations &&\r\n  conversations.map((c) => (\r\n    <div onClick={() => handleChatClick(c)} key={c._id}>\r\n      <Conversation\r\n        conversation={c}\r\n        currentUser={user}\r\n        highlight={unreadConversations.has(c._id)}\r\n      />\r\n    </div>\r\n  ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m, index) => (\r\n                    <div ref={scrollRef} key={index}>\r\n                      <Message message={m} own={m.sender === user._id} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"write something...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                    disabled={isLoading} // Disable while loading\r\n                  ></textarea>\r\n                  <button\r\n                    className=\"chatSubmitButton\"\r\n                    onClick={handleSubmit}\r\n                    disabled={isLoading} // Disable while loading\r\n                  >\r\n                    {isLoading ? \"Sending...\" : \"Send\"}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noConversationText\">\r\n                Open a conversation to start a chat.\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chatOnline\">\r\n          <div className=\"chatOnlineWrapper\">\r\n            <ChatOnline onlineUsers={onlineUsers} currentId={user._id} setCurrentChat={setCurrentChat} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}