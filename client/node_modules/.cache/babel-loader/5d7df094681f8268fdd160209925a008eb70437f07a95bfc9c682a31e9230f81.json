{"ast":null,"code":"// import \"./post.css\";\n// import { MoreVert } from \"@mui/icons-material\";\n// // import { Users } from \"../../dummyData\";\n// import { useState, useEffect, useContext } from \"react\";\n// import axios from \"axios\";\n// import { format } from \"timeago.js\";\n// import { Link } from \"react-router-dom\";\n// import { AuthContext } from \"../../context/AuthContext\";\n\n// export default function Post({ post }) {\n//   const [like, setLike] = useState(post.likes.length);\n//   const [isLiked, setIsLiked] = useState(false);\n//   const [user, setUser] = useState({});\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // For success message\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n//   const { user: currentUser, dispatch } = useContext(AuthContext);\n\n//   useEffect(() => {\n//     setIsLiked(post.likes.includes(currentUser._id));\n//   }, [currentUser._id, post.likes]);\n\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const res = await axios.get(\n//           `http://localhost:8800/api/users?userId=${post.userId}`\n//         );\n//         setUser(res.data);\n//       } catch (error) {\n//         console.error(\"Error fetching user:\", error);\n//       }\n//     };\n//     fetchUser();\n//   }, [post.userId]);\n\n//   const likeHandler = () => {\n//     try {\n//       axios.put(\"http://localhost:8800/api/posts/\" + post._id + \"/like\", {\n//         userId: currentUser._id,\n//       });\n//     } catch (err) {}\n//     setLike(isLiked ? like - 1 : like + 1);\n//     setIsLiked(!isLiked);\n//   };\n\n//   const deleteHandler = async () => {\n//     try {\n//       await axios.delete(`http://localhost:8800/api/posts/${post._id}`, {\n//         data: { userId: currentUser._id },\n//       });\n//       setSuccessMessage(\"Post deleted successfully\");\n//       // Optionally call the refresh function\n//       refreshProfile();\n//     } catch (err) {\n//       console.error(\"Error deleting post:\", err);\n//       setSuccessMessage(\"Failed to delete post\");\n//     }\n//   };\n\n//   const updateHandler = async () => {\n//     try {\n//       const updatedPost = { ...post, desc: \"Updated description\" }; // Example updated post data\n//       await axios.put(\n//         `http://localhost:8800/api/posts/${post._id}`,\n//         updatedPost,\n//         { data: { userId: currentUser._id } }\n//       );\n//       setSuccessMessage(\"Post updated successfully\");\n//       refreshProfile(); // Refresh profile after update\n//     } catch (err) {\n//       console.error(\"Error updating post:\", err);\n//       setSuccessMessage(\"Failed to update post\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"post\">\n//       <div className=\"postWrapper\">\n//         <div className=\"postTop\">\n//           <div className=\"postTopLeft\">\n//             <Link to={`/profile/${user.username}`}>\n//               <img\n//                 className=\"postProfileImage\"\n//                 src={\n//                   user.profilePicture\n//                     ? PF + user.profilePicture\n//                     : PF + \"person/noAvatar.png\"\n//                 }\n//                 alt=\"\"\n//               />\n//             </Link>\n//             <span className=\"postUserName\">{user.username}</span>\n//             <span className=\"postDate\">{format(post.createdAt)}</span>\n//           </div>\n//           <div className=\"postTopRight\">\n//           {post.userId === currentUser._id && (\n//               <div>\n//                 <button className=\"updateButton\" onClick={updateHandler}>Update</button>\n//                 <button className=\"deleteButton\" onClick={deleteHandler}>Delete</button>\n//               </div>\n//             )}\n//             <MoreVert />\n//           </div>\n//         </div>\n//         <div className=\"postCenter\">\n//           <span className=\"postText\">{post?.desc}</span>\n//           <img className=\"postImage\" src={PF + post.img} alt=\"\" />\n//         </div>\n//         <div className=\"postBottom\">\n//           <div className=\"postBottomLeft\">\n//             <img\n//               className=\"likeIcon\"\n//               src={`${PF}like.png`}\n//               onClick={likeHandler}\n//               alt=\"\"\n//             />\n//             <img\n//               className=\"likeIcon\"\n//               src={`${PF}heart.png`}\n//               onClick={likeHandler}\n//               alt=\"\"\n//             />\n//             <span className=\"postLikeCounter\">{like} people like it</span>\n//           </div>\n//           <div className=\"postBottomRight\">\n//             <span className=\"postCommentText\">{post.comment} comments</span>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/IntelliConnect/client/src/components/post/Post.jsx"],"sourcesContent":["// import \"./post.css\";\r\n// import { MoreVert } from \"@mui/icons-material\";\r\n// // import { Users } from \"../../dummyData\";\r\n// import { useState, useEffect, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import { format } from \"timeago.js\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { AuthContext } from \"../../context/AuthContext\";\r\n\r\n// export default function Post({ post }) {\r\n//   const [like, setLike] = useState(post.likes.length);\r\n//   const [isLiked, setIsLiked] = useState(false);\r\n//   const [user, setUser] = useState({});\r\n//   const [successMessage, setSuccessMessage] = useState(\"\"); // For success message\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n//   const { user: currentUser, dispatch } = useContext(AuthContext);\r\n\r\n//   useEffect(() => {\r\n//     setIsLiked(post.likes.includes(currentUser._id));\r\n//   }, [currentUser._id, post.likes]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const res = await axios.get(\r\n//           `http://localhost:8800/api/users?userId=${post.userId}`\r\n//         );\r\n//         setUser(res.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user:\", error);\r\n//       }\r\n//     };\r\n//     fetchUser();\r\n//   }, [post.userId]);\r\n\r\n//   const likeHandler = () => {\r\n//     try {\r\n//       axios.put(\"http://localhost:8800/api/posts/\" + post._id + \"/like\", {\r\n//         userId: currentUser._id,\r\n//       });\r\n//     } catch (err) {}\r\n//     setLike(isLiked ? like - 1 : like + 1);\r\n//     setIsLiked(!isLiked);\r\n//   };\r\n\r\n//   const deleteHandler = async () => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8800/api/posts/${post._id}`, {\r\n//         data: { userId: currentUser._id },\r\n//       });\r\n//       setSuccessMessage(\"Post deleted successfully\");\r\n//       // Optionally call the refresh function\r\n//       refreshProfile();\r\n//     } catch (err) {\r\n//       console.error(\"Error deleting post:\", err);\r\n//       setSuccessMessage(\"Failed to delete post\");\r\n//     }\r\n//   };\r\n\r\n//   const updateHandler = async () => {\r\n//     try {\r\n//       const updatedPost = { ...post, desc: \"Updated description\" }; // Example updated post data\r\n//       await axios.put(\r\n//         `http://localhost:8800/api/posts/${post._id}`,\r\n//         updatedPost,\r\n//         { data: { userId: currentUser._id } }\r\n//       );\r\n//       setSuccessMessage(\"Post updated successfully\");\r\n//       refreshProfile(); // Refresh profile after update\r\n//     } catch (err) {\r\n//       console.error(\"Error updating post:\", err);\r\n//       setSuccessMessage(\"Failed to update post\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"post\">\r\n//       <div className=\"postWrapper\">\r\n//         <div className=\"postTop\">\r\n//           <div className=\"postTopLeft\">\r\n//             <Link to={`/profile/${user.username}`}>\r\n//               <img\r\n//                 className=\"postProfileImage\"\r\n//                 src={\r\n//                   user.profilePicture\r\n//                     ? PF + user.profilePicture\r\n//                     : PF + \"person/noAvatar.png\"\r\n//                 }\r\n//                 alt=\"\"\r\n//               />\r\n//             </Link>\r\n//             <span className=\"postUserName\">{user.username}</span>\r\n//             <span className=\"postDate\">{format(post.createdAt)}</span>\r\n//           </div>\r\n//           <div className=\"postTopRight\">\r\n//           {post.userId === currentUser._id && (\r\n//               <div>\r\n//                 <button className=\"updateButton\" onClick={updateHandler}>Update</button>\r\n//                 <button className=\"deleteButton\" onClick={deleteHandler}>Delete</button>\r\n//               </div>\r\n//             )}\r\n//             <MoreVert />\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"postCenter\">\r\n//           <span className=\"postText\">{post?.desc}</span>\r\n//           <img className=\"postImage\" src={PF + post.img} alt=\"\" />\r\n//         </div>\r\n//         <div className=\"postBottom\">\r\n//           <div className=\"postBottomLeft\">\r\n//             <img\r\n//               className=\"likeIcon\"\r\n//               src={`${PF}like.png`}\r\n//               onClick={likeHandler}\r\n//               alt=\"\"\r\n//             />\r\n//             <img\r\n//               className=\"likeIcon\"\r\n//               src={`${PF}heart.png`}\r\n//               onClick={likeHandler}\r\n//               alt=\"\"\r\n//             />\r\n//             <span className=\"postLikeCounter\">{like} people like it</span>\r\n//           </div>\r\n//           <div className=\"postBottomRight\">\r\n//             <span className=\"postCommentText\">{post.comment} comments</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}