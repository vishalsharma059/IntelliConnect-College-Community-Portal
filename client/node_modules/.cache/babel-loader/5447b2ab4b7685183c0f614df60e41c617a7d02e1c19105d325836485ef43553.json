{"ast":null,"code":"var _jsxFileName = \"D:\\\\IntelliConnect\\\\client\\\\src\\\\pages\\\\login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport \"./login.css\";\nimport { useContext, useRef, useState } from \"react\";\nimport { loginCall } from \"../../apiCalls\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { CircularProgress } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\n// export default function Login() {\n//   const email = useRef();\n//   const password = useRef();\n//   const { user, isFetching, error, dispatch } = useContext(AuthContext);\n//   const navigate = useNavigate();\n\n//   const handleClick = (e) => {\n\n//     e.preventDefault();\n//     loginCall({ email:email.current.value, password:password.current.value }, dispatch);\n//   };\n\n//   const handleRegisterRedirect = () => {\n//     navigate(\"/register\"); // Navigate to register page\n//   };\n\n//   // console.log(user);\n\n//   return (\n//       <div className=\"login\">\n//           <div className=\"loginWrapper\">\n//         <div className=\"loginLeft\">\n//           <h3 className=\"loginLogo\">IntelliConnect</h3>\n//           <span className=\"loginDesc\">\n//             Smart Campus, Bright mind: Your Gateway Endless Opportunities.\n//           </span>\n//         </div>\n//         <div className=\"loginRight\">\n//           <form className=\"loginBox\" onSubmit={handleClick}>\n//             <input placeholder=\"Email\" required type=\"email\" className=\"loginInput\" ref={email}/>\n//             <input placeholder=\"Password\" required minLength=\"6\" type=\"password\" className=\"loginInput\" ref={password} />\n\n//             <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>{isFetching ? <CircularProgress color=\"white\" size=\"20px\" /> : \"Log In\"}</button>\n\n//             {error && <span className=\"errorMessage\">{error}</span>}\n\n//             <span className=\"loginForgot\">Forgot Password?</span>\n\n//             <button className=\"loginRegisterButton\" type=\"button\"\n//               onClick={handleRegisterRedirect}>\n//             {isFetching ? <CircularProgress color=\"white\" size=\"20px\"/> : \"Create a New Account\"}\n\n//             </button>\n//          </form>\n//         </div>\n//       </div>\n\n//     </div>\n//   )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const email = useRef();\n  const password = useRef();\n  const {\n    user,\n    isFetching,\n    error,\n    dispatch\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [loadingButton, setLoadingButton] = useState(\"\"); // \"login\" or \"register\"\n\n  const handleClick = e => {\n    e.preventDefault();\n    setLoadingButton(\"login\");\n    loginCall({\n      email: email.current.value,\n      password: password.current.value\n    }, dispatch);\n  };\n  const handleRegisterRedirect = () => {\n    setLoadingButton(\"register\");\n    navigate(\"/register\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"loginLogo\",\n          children: \"IntelliConnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loginDesc\",\n          children: \"Smart Campus, Bright mind: Your Gateway Endless Opportunities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginRight\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginBox\",\n          onSubmit: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            required: true,\n            type: \"email\",\n            className: \"loginInput\",\n            ref: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            required: true,\n            minLength: \"6\",\n            type: \"password\",\n            className: \"loginInput\",\n            ref: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginButton\",\n            type: \"submit\",\n            disabled: isFetching && loadingButton === \"login\",\n            children: isFetching && loadingButton === \"login\" ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"white\",\n              size: \"20px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this) : \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorMessage\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loginForgot\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginRegisterButton\",\n            type: \"button\",\n            onClick: handleRegisterRedirect,\n            disabled: isFetching && loadingButton === \"register\",\n            children: isFetching && loadingButton === \"register\" ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"white\",\n              size: \"20px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this) : \"Create a New Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"3TMOX3N5ZeWVUs5Qet9cNwWdadM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useRef","useState","loginCall","AuthContext","CircularProgress","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","password","user","isFetching","error","dispatch","navigate","loadingButton","setLoadingButton","handleClick","e","preventDefault","current","value","handleRegisterRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","required","type","ref","minLength","disabled","color","size","onClick","_c","$RefreshReg$"],"sources":["D:/IntelliConnect/client/src/pages/login/Login.jsx"],"sourcesContent":["import \"./login.css\"\r\nimport { useContext, useRef, useState } from \"react\";\r\nimport { loginCall } from \"../../apiCalls\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// export default function Login() {\r\n//   const email = useRef();\r\n//   const password = useRef();\r\n//   const { user, isFetching, error, dispatch } = useContext(AuthContext);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleClick = (e) => {\r\n\r\n//     e.preventDefault();\r\n//     loginCall({ email:email.current.value, password:password.current.value }, dispatch);\r\n//   };\r\n\r\n//   const handleRegisterRedirect = () => {\r\n//     navigate(\"/register\"); // Navigate to register page\r\n//   };\r\n\r\n//   // console.log(user);\r\n  \r\n//   return (\r\n//       <div className=\"login\">\r\n//           <div className=\"loginWrapper\">\r\n//         <div className=\"loginLeft\">\r\n//           <h3 className=\"loginLogo\">IntelliConnect</h3>\r\n//           <span className=\"loginDesc\">\r\n//             Smart Campus, Bright mind: Your Gateway Endless Opportunities.\r\n//           </span>\r\n//         </div>\r\n//         <div className=\"loginRight\">\r\n//           <form className=\"loginBox\" onSubmit={handleClick}>\r\n//             <input placeholder=\"Email\" required type=\"email\" className=\"loginInput\" ref={email}/>\r\n//             <input placeholder=\"Password\" required minLength=\"6\" type=\"password\" className=\"loginInput\" ref={password} />\r\n            \r\n//             <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>{isFetching ? <CircularProgress color=\"white\" size=\"20px\" /> : \"Log In\"}</button>\r\n\r\n//             {error && <span className=\"errorMessage\">{error}</span>}\r\n            \r\n//             <span className=\"loginForgot\">Forgot Password?</span>\r\n\r\n//             <button className=\"loginRegisterButton\" type=\"button\"\r\n//               onClick={handleRegisterRedirect}>\r\n//             {isFetching ? <CircularProgress color=\"white\" size=\"20px\"/> : \"Create a New Account\"}\r\n              \r\n//             </button>\r\n//          </form>\r\n//         </div>\r\n//       </div>\r\n      \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\nexport default function Login() {\r\n  const email = useRef();\r\n  const password = useRef();\r\n  const { user, isFetching, error, dispatch } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [loadingButton, setLoadingButton] = useState(\"\"); // \"login\" or \"register\"\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setLoadingButton(\"login\");\r\n    loginCall(\r\n      { email: email.current.value, password: password.current.value },\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  const handleRegisterRedirect = () => {\r\n    setLoadingButton(\"register\");\r\n    navigate(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">IntelliConnect</h3>\r\n          <span className=\"loginDesc\">\r\n            Smart Campus, Bright mind: Your Gateway Endless Opportunities.\r\n          </span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <form className=\"loginBox\" onSubmit={handleClick}>\r\n            <input placeholder=\"Email\" required type=\"email\" className=\"loginInput\" ref={email}/>\r\n            <input placeholder=\"Password\" required minLength=\"6\" type=\"password\" className=\"loginInput\" ref={password} />\r\n            \r\n            <button\r\n              className=\"loginButton\"\r\n              type=\"submit\"\r\n              disabled={isFetching && loadingButton === \"login\"}\r\n            >\r\n              {isFetching && loadingButton === \"login\" ? (\r\n                <CircularProgress color=\"white\" size=\"20px\" />\r\n              ) : (\r\n                \"Log In\"\r\n              )}\r\n            </button>\r\n\r\n            {error && <span className=\"errorMessage\">{error}</span>}\r\n            \r\n            <span className=\"loginForgot\">Forgot Password?</span>\r\n\r\n            <button\r\n              className=\"loginRegisterButton\"\r\n              type=\"button\"\r\n              onClick={handleRegisterRedirect}\r\n              disabled={isFetching && loadingButton === \"register\"}\r\n            >\r\n              {isFetching && loadingButton === \"register\" ? (\r\n                <CircularProgress color=\"white\" size=\"20px\" />\r\n              ) : (\r\n                \"Create a New Account\"\r\n              )}\r\n            </button>\r\n         </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,gBAAgB,QAAQ,eAAe;AAChD,SAASC,WAAW,QAAQ,kBAAkB;;AAG9C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,KAAK,GAAGV,MAAM,CAAC,CAAC;EACtB,MAAMW,QAAQ,GAAGX,MAAM,CAAC,CAAC;EACzB,MAAM;IAAEY,IAAI;IAAEC,UAAU;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGhB,UAAU,CAACI,WAAW,CAAC;EACrE,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD,MAAMkB,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,gBAAgB,CAAC,OAAO,CAAC;IACzBhB,SAAS,CACP;MAAEQ,KAAK,EAAEA,KAAK,CAACY,OAAO,CAACC,KAAK;MAAEZ,QAAQ,EAAEA,QAAQ,CAACW,OAAO,CAACC;IAAM,CAAC,EAChER,QACF,CAAC;EACH,CAAC;EAED,MAAMS,sBAAsB,GAAGA,CAAA,KAAM;IACnCN,gBAAgB,CAAC,UAAU,CAAC;IAC5BF,QAAQ,CAAC,WAAW,CAAC;EACvB,CAAC;EAED,oBACET,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBnB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BnB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBnB,OAAA;UAAIkB,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7CvB,OAAA;UAAMkB,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAE5B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNvB,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBnB,OAAA;UAAMkB,SAAS,EAAC,UAAU;UAACM,QAAQ,EAAEZ,WAAY;UAAAO,QAAA,gBAC/CnB,OAAA;YAAOyB,WAAW,EAAC,OAAO;YAACC,QAAQ;YAACC,IAAI,EAAC,OAAO;YAACT,SAAS,EAAC,YAAY;YAACU,GAAG,EAAEzB;UAAM;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACrFvB,OAAA;YAAOyB,WAAW,EAAC,UAAU;YAACC,QAAQ;YAACG,SAAS,EAAC,GAAG;YAACF,IAAI,EAAC,UAAU;YAACT,SAAS,EAAC,YAAY;YAACU,GAAG,EAAExB;UAAS;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAE7GvB,OAAA;YACEkB,SAAS,EAAC,aAAa;YACvBS,IAAI,EAAC,QAAQ;YACbG,QAAQ,EAAExB,UAAU,IAAII,aAAa,KAAK,OAAQ;YAAAS,QAAA,EAEjDb,UAAU,IAAII,aAAa,KAAK,OAAO,gBACtCV,OAAA,CAACH,gBAAgB;cAACkC,KAAK,EAAC,OAAO;cAACC,IAAI,EAAC;YAAM;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAE9C;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,EAERhB,KAAK,iBAAIP,OAAA;YAAMkB,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEZ;UAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAEvDvB,OAAA;YAAMkB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAErDvB,OAAA;YACEkB,SAAS,EAAC,qBAAqB;YAC/BS,IAAI,EAAC,QAAQ;YACbM,OAAO,EAAEhB,sBAAuB;YAChCa,QAAQ,EAAExB,UAAU,IAAII,aAAa,KAAK,UAAW;YAAAS,QAAA,EAEpDb,UAAU,IAAII,aAAa,KAAK,UAAU,gBACzCV,OAAA,CAACH,gBAAgB;cAACkC,KAAK,EAAC,OAAO;cAACC,IAAI,EAAC;YAAM;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAE9C;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CApEuBD,KAAK;EAAA,QAIVH,WAAW;AAAA;AAAAoC,EAAA,GAJNjC,KAAK;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}