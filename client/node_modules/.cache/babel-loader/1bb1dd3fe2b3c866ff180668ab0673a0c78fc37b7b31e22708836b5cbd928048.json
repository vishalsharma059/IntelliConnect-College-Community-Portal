{"ast":null,"code":"// import \"./topbar.css\";\n// import {\n//   Search,\n//   Person,\n//   Chat,\n//   Notifications,\n// } from \"@mui/icons-material\";\n\n// import { useContext } from \"react\";\n// import { useState, useRef, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n// import { AuthContext } from \"../../context/AuthContext\";\n// import axios from \"axios\";\n\n// export default function Topbar() {\n//   const { user, dispatch } = useContext(AuthContext);\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n//   const [showDropdown, setShowDropdown] = useState(false);\n//   const searchRef = useRef();\n//   const navigate = useNavigate();\n\n//   const handleLogout = () => {\n//     dispatch({ type: \"LOGOUT\" });\n//     localStorage.removeItem(\"user\");\n//     window.location.reload();\n//   };\n\n//   const handleSearch = async (query) => {\n//     try {\n//       const res = await axios.get(\n//         `http://localhost:8800/api/users/search?query=${query}`\n//       );\n//       setSearchResults(res.data);\n//       setShowDropdown(true);\n//     } catch (err) {\n//       console.error(\"Search error:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     const handleClickOutside = (e) => {\n//       if (searchRef.current && !searchRef.current.contains(e.target)) {\n//         setShowDropdown(false);\n//       }\n//     };\n//     document.addEventListener(\"mousedown\", handleClickOutside);\n//     return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n//   }, []);\n\n//   return (\n//     <div className=\"topbarContainer\">\n//       <div className=\"topbarLeft\">\n//         <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n//           <span className=\"logo\">IntelliConnect</span>\n//         </Link>\n//       </div>\n//       <div className=\"topbarCenter\">\n//         <div className=\"searchbar\" ref={searchRef}>\n//           <Search\n//             className=\"searchIcon\"\n//             onClick={() => {\n//               if (searchQuery.trim()) {\n//                 handleSearch(searchQuery);\n//               }\n//             }}\n//             style={{ cursor: \"pointer\" }}\n//           />\n//           <input\n//             placeholder=\"Search for friend, post or video\"\n//             className=\"searchInput\"\n//             value={searchQuery}\n//             onChange={(e) => setSearchQuery(e.target.value)}\n//             onKeyDown={(e) => {\n//               if (e.key === \"Enter\" && searchQuery.trim()) {\n//                 handleSearch(searchQuery);\n//               }\n//             }}\n//           />\n//           {showDropdown && (\n//   <ul className=\"searchDropdown\">\n//     {searchResults.length > 0 ? (\n//       searchResults.map((user) => (\n//         <li\n//           key={user._id}\n//           onClick={() => {\n//             navigate(`/profile/${user.username}`);\n//             setSearchQuery(\"\");\n//             setSearchResults([]);\n//             setShowDropdown(false);\n//           }}\n//           className=\"searchResultItem\"\n//         >\n//           <img\n//             src={\n//     user.profilePicture\n//       ? user.profilePicture.startsWith(\"http\")\n//         ? user.profilePicture\n//         : PF + user.profilePicture\n//       : PF + \"person/noAvatar.png\"\n//   }\n//             alt=\"\"\n//           />\n//           <span>{user.username}</span>\n//         </li>\n//       ))\n//     ) : (\n//       <li className=\"searchResultItem noResult\">User not found</li>\n//     )}\n//   </ul>\n// )}\n\n//         </div>\n//       </div>\n//       <div className=\"topbarRight\">\n//         <div className=\"topbarLinks\">\n//           <span className=\"topbarLink\">Homepage</span>\n//           <span className=\"topbarLink\">\n//             <Link to=\"/ChatBot\" className=\"chatbot-link\">\n//               ChatBot\n//             </Link>\n//           </span>\n//           <span\n//             className=\"topbarLink\"\n//             onClick={handleLogout}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             Logout\n//           </span>\n//         </div>\n//         <div className=\"topbarIcons\">\n//           <div className=\"topbarIconItem\">\n//             <Person />\n//             <span className=\"topbarIconBadge\">1</span>\n//           </div>\n//           <div className=\"topbarIconItem\">\n//             <Link\n//               to=\"/messenger\"\n//               style={{ color: \"inherit\", textDecoration: \"none\" }}\n//             >\n//               <Chat />\n//             </Link>\n//             <span className=\"topbarIconBadge\">2</span>\n//           </div>\n\n//           <div className=\"topbarIconItem\">\n//             <Notifications />\n//             <span className=\"topbarIconBadge\">1</span>\n//           </div>\n//         </div>\n//         <Link to={`/profile/${user.username}`}>\n//           <img\n//             src={\n//     user.profilePicture\n//       ? user.profilePicture.startsWith(\"http\")\n//         ? user.profilePicture\n//         : PF + user.profilePicture\n//       : PF + \"person/noAvatar.png\"\n//   }\n//             alt=\"\"\n//             className=\"topbarImg\"\n//           />\n//         </Link>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/IntelliConnect/client/src/components/topbar/Topbar.jsx"],"sourcesContent":["// import \"./topbar.css\";\r\n// import {\r\n//   Search,\r\n//   Person,\r\n//   Chat,\r\n//   Notifications,\r\n// } from \"@mui/icons-material\";\r\n\r\n// import { useContext } from \"react\";\r\n// import { useState, useRef, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { AuthContext } from \"../../context/AuthContext\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Topbar() {\r\n//   const { user, dispatch } = useContext(AuthContext);\r\n//   const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [searchResults, setSearchResults] = useState([]);\r\n//   const [showDropdown, setShowDropdown] = useState(false);\r\n//   const searchRef = useRef();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogout = () => {\r\n//     dispatch({ type: \"LOGOUT\" });\r\n//     localStorage.removeItem(\"user\");\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   const handleSearch = async (query) => {\r\n//     try {\r\n//       const res = await axios.get(\r\n//         `http://localhost:8800/api/users/search?query=${query}`\r\n//       );\r\n//       setSearchResults(res.data);\r\n//       setShowDropdown(true);\r\n//     } catch (err) {\r\n//       console.error(\"Search error:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const handleClickOutside = (e) => {\r\n//       if (searchRef.current && !searchRef.current.contains(e.target)) {\r\n//         setShowDropdown(false);\r\n//       }\r\n//     };\r\n//     document.addEventListener(\"mousedown\", handleClickOutside);\r\n//     return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"topbarContainer\">\r\n//       <div className=\"topbarLeft\">\r\n//         <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n//           <span className=\"logo\">IntelliConnect</span>\r\n//         </Link>\r\n//       </div>\r\n//       <div className=\"topbarCenter\">\r\n//         <div className=\"searchbar\" ref={searchRef}>\r\n//           <Search\r\n//             className=\"searchIcon\"\r\n//             onClick={() => {\r\n//               if (searchQuery.trim()) {\r\n//                 handleSearch(searchQuery);\r\n//               }\r\n//             }}\r\n//             style={{ cursor: \"pointer\" }}\r\n//           />\r\n//           <input\r\n//             placeholder=\"Search for friend, post or video\"\r\n//             className=\"searchInput\"\r\n//             value={searchQuery}\r\n//             onChange={(e) => setSearchQuery(e.target.value)}\r\n//             onKeyDown={(e) => {\r\n//               if (e.key === \"Enter\" && searchQuery.trim()) {\r\n//                 handleSearch(searchQuery);\r\n//               }\r\n//             }}\r\n//           />\r\n//           {showDropdown && (\r\n//   <ul className=\"searchDropdown\">\r\n//     {searchResults.length > 0 ? (\r\n//       searchResults.map((user) => (\r\n//         <li\r\n//           key={user._id}\r\n//           onClick={() => {\r\n//             navigate(`/profile/${user.username}`);\r\n//             setSearchQuery(\"\");\r\n//             setSearchResults([]);\r\n//             setShowDropdown(false);\r\n//           }}\r\n//           className=\"searchResultItem\"\r\n//         >\r\n//           <img\r\n//             src={\r\n//     user.profilePicture\r\n//       ? user.profilePicture.startsWith(\"http\")\r\n//         ? user.profilePicture\r\n//         : PF + user.profilePicture\r\n//       : PF + \"person/noAvatar.png\"\r\n//   }\r\n//             alt=\"\"\r\n//           />\r\n//           <span>{user.username}</span>\r\n//         </li>\r\n//       ))\r\n//     ) : (\r\n//       <li className=\"searchResultItem noResult\">User not found</li>\r\n//     )}\r\n//   </ul>\r\n// )}\r\n\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"topbarRight\">\r\n//         <div className=\"topbarLinks\">\r\n//           <span className=\"topbarLink\">Homepage</span>\r\n//           <span className=\"topbarLink\">\r\n//             <Link to=\"/ChatBot\" className=\"chatbot-link\">\r\n//               ChatBot\r\n//             </Link>\r\n//           </span>\r\n//           <span\r\n//             className=\"topbarLink\"\r\n//             onClick={handleLogout}\r\n//             style={{ cursor: \"pointer\" }}\r\n//           >\r\n//             Logout\r\n//           </span>\r\n//         </div>\r\n//         <div className=\"topbarIcons\">\r\n//           <div className=\"topbarIconItem\">\r\n//             <Person />\r\n//             <span className=\"topbarIconBadge\">1</span>\r\n//           </div>\r\n//           <div className=\"topbarIconItem\">\r\n//             <Link\r\n//               to=\"/messenger\"\r\n//               style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n//             >\r\n//               <Chat />\r\n//             </Link>\r\n//             <span className=\"topbarIconBadge\">2</span>\r\n//           </div>\r\n\r\n//           <div className=\"topbarIconItem\">\r\n//             <Notifications />\r\n//             <span className=\"topbarIconBadge\">1</span>\r\n//           </div>\r\n//         </div>\r\n//         <Link to={`/profile/${user.username}`}>\r\n//           <img\r\n//             src={\r\n//     user.profilePicture\r\n//       ? user.profilePicture.startsWith(\"http\")\r\n//         ? user.profilePicture\r\n//         : PF + user.profilePicture\r\n//       : PF + \"person/noAvatar.png\"\r\n//   }\r\n//             alt=\"\"\r\n//             className=\"topbarImg\"\r\n//           />\r\n//         </Link>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}